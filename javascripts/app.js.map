{"version":3,"file":"public\\javascripts\\app.js","sources":["app/scripts/00.app.js","app/scripts/01.approuter.js","app/scripts/cart/cart-data.js","app/scripts/cart/cart-link.js","app/scripts/cart/cart.js","app/scripts/components/affiliates.js","app/scripts/components/home-slides.js","app/scripts/components/region-selector.js","app/scripts/components/top-menu.js","app/scripts/deals/deals-data.js","app/scripts/deals/deals-details.js","app/scripts/deals/deals-list.js","app/scripts/deals/deals.js","app/scripts/hacks.js","app/scripts/utilities.js"],"names":[],"mappingszpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CCrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CCxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CCzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CCxnthHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CCjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A","sourcesContent":["/********************************/\r\n/*\r\n/* Diskupon Starts Here\r\n/*\r\n/********************************/\r\nwindow.Diskupon = {\r\n    DealCategory: {\r\n        All: -11,\r\n        New: -22,\r\n        Hot: -33,\r\n        EndingSoon: -44,\r\n        ByCategory: -55,\r\n        Honeymoon: -66\r\n    },\r\n    API_HOST: 'diskupon.api',\r\n    //API_HOST: 'diskupon.apphb.com',\r\n    requestUrl: function (slug) {\r\n        if (slug.substring(0, 1) === '/') {\r\n            return '//' + this.API_HOST + slug;\r\n        } else {\r\n            return '//' + this.API_HOST + '/api/' + slug;\r\n        }\r\n    }\r\n};\r\n\r\n(function (diskupon) {\r\n    diskupon.App = new Marionette.Application();\r\n    var App = diskupon.App;\r\n\r\n    /*** regions and layouts ***/\r\n    App.regionManager = new Marionette.RegionManager();\r\n    App.regionManager.addRegions({\r\n        Header: '#dsk_header',\r\n        //CartLink: '#dsk_cartLinkSection',\r\n        RegionSelector: '#dsk_pick_region',\r\n        TopMenu: '#dsk_topMenu',\r\n        TopMenuInner: '#dsk_topMenu_Inner',\r\n        TopMenuInnerMobile: '#dsk_topMenu_Inner_Mobile',\r\n        Main: '#dsk_main',\r\n        Affiliates: '#dsk_affiliates',\r\n        Footer: '#dsk_footer'\r\n    });\r\n\r\n    /*** event handlers ***/\r\n    App.on('start', function () {\r\n        if (Backbone.history){\r\n            Backbone.history.start({ pushState: true });\r\n            prepareBackbonePushState();\r\n        }\r\n    });\r\n\r\n    App.vent.on('submodule:start', function (submodulesNames, submoduleName, options) {\r\n        //console.log('ON:submodule:start NAME >> ' + submoduleName);\r\n        for (var i = 0; i < submodulesNames.length; i++) {\r\n            var _submoduleName = submodulesNames[i];\r\n            if (_submoduleName !== submoduleName) {\r\n                //console.log('ON:submodule:start STOPPING >> ' + _submoduleName);\r\n                App.module(_submoduleName).stop();\r\n            } else {\r\n                //console.log('ON:submodule:start STARTING >> ' + _submoduleName);\r\n                App.module(_submoduleName).start(options);\r\n            }\r\n        }\r\n    });\r\n\r\n    // todo: we can move this to a view\r\n    var headerElementId = App.regionManager.get('Header').el;\r\n    $(document).on('click', (headerElementId + ' #dsk_searchDeals_submit'), function (e) {\r\n        $(headerElementId + ' #dsk_searchDeals_form').submit();\r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n    $(document).on('submit', (headerElementId + ' #dsk_searchDeals_form'), function (e) {\r\n        var query = $(headerElementId + ' #dsk_searchDeals_query').val().trim();\r\n        if (query) {\r\n            var encodedQuery = encode(query);\r\n            window.location.href = '/kupons/search/' + encodedQuery;\r\n            //Backbone.history.navigate('/kupons/search/' + encodedQuery, true);\r\n        }\r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n    $(document).on('click', '.dsk-topMenuInnerMobile li a', function (e) {\r\n        var isCollapsed = $('.dsk-navtoggle').hasClass('collapsed');\r\n        if (!isCollapsed) {\r\n            $('.dsk-navtoggle').trigger('click');\r\n        }\r\n    });\r\n    // end todo\r\n\r\n    /*** others ***/\r\n    App.SelectedRegionId = {\r\n        get: function () {\r\n            var ls = localStorage.getItem('ds_regionid');\r\n            if (ls === null) {\r\n                ls = '2'; // change this with jakarta id\r\n            }\r\n            var selectedRegionId = parseInt(ls, 10);\r\n            return selectedRegionId;\r\n        },\r\n        set: function (value) {\r\n            localStorage.setItem('ds_regionid', value.toString());\r\n        }\r\n    };\r\n\r\n} (window.Diskupon));","(function (diskupon, App) {\r\n\r\n    var appRouterController = function () {\r\n        function parseQueryString (queryString) {\r\n            var qsObj = {};\r\n            if (queryString) {\r\n                var decoded = decode(queryString);\r\n                var arrQs = decoded.split('&');\r\n                for (var i = 0; i < arrQs.length; i++) {\r\n                    var kp = arrQs[i].split('=');\r\n                    qsObj[kp[0]] = qsObj[kp[1]];\r\n                }\r\n            }\r\n            return qsObj;\r\n        }\r\n\r\n        return {\r\n            showHeader: function (options) {\r\n                App.Cart.controller.showCartLink();\r\n                App.RegionSelector.controller.show();\r\n                App.TopMenu.controller.show();\r\n            },\r\n\r\n            showAffiliates: function () {\r\n                App.Affiliates.controller.show();\r\n            },\r\n\r\n            showHomePage: function () {\r\n                this.showHeader();\r\n                this.showAffiliates();\r\n                App.Deals.controller.showTopDealsGroupByCategory();\r\n            },\r\n\r\n            showAllKuponsPage: function () {\r\n                App.TopMenu.controller.listenTo(App.TopMenu.controller, 'topmenu:shown', function () {\r\n                    App.TopMenu.controller.trigger('topmenu:changeactivemenuitem', diskupon.DealCategory.All);\r\n                });\r\n                this.showHeader();\r\n                this.showAffiliates();\r\n                App.Deals.controller.showDealsList({\r\n                    categoryId: diskupon.DealCategory.All,\r\n                    searchQuery: ''\r\n                });\r\n            },\r\n\r\n            showNewKuponsPage: function () {\r\n                App.TopMenu.controller.listenTo(App.TopMenu.controller, 'topmenu:shown', function () {\r\n                    App.TopMenu.controller.trigger('topmenu:changeactivemenuitem', diskupon.DealCategory.New);\r\n                });\r\n                this.showHeader();\r\n                this.showAffiliates();\r\n                App.Deals.controller.showDealsList({\r\n                    categoryId: diskupon.DealCategory.New,\r\n                    searchQuery: ''\r\n                });\r\n            },\r\n\r\n            showEndingSoonKuponsPage: function () {\r\n                App.TopMenu.controller.listenTo(App.TopMenu.controller, 'topmenu:shown', function () {\r\n                    App.TopMenu.controller.trigger('topmenu:changeactivemenuitem', diskupon.DealCategory.EndingSoon);\r\n                });\r\n                this.showHeader();\r\n                this.showAffiliates();\r\n                App.Deals.controller.showDealsList(diskupon.DealCategory.EndingSoon);\r\n            },\r\n\r\n            showHotKuponsPage: function () {\r\n                App.TopMenu.controller.listenTo(App.TopMenu.controller, 'topmenu:shown', function () {\r\n                    App.TopMenu.controller.trigger('topmenu:changeactivemenuitem', diskupon.DealCategory.Hot);\r\n                });\r\n                this.showHeader();\r\n                this.showAffiliates();\r\n                App.Deals.controller.showDealsList({\r\n                    categoryId: diskupon.DealCategory.Hot,\r\n                    searchQuery: ''\r\n                });\r\n            },\r\n\r\n            showKuponsByCategory: function (id, name) {\r\n                App.TopMenu.controller.listenTo(App.TopMenu.controller, 'topmenu:shown', function () {\r\n                    App.TopMenu.controller.trigger('topmenu:changeactivemenuitem', diskupon.DealCategory.ByCategory, id);\r\n                });\r\n                this.showHeader();\r\n                this.showAffiliates();\r\n                App.Deals.controller.showDealsList({\r\n                    categoryId: id,\r\n                    searchQuery: ''\r\n                });\r\n            },\r\n\r\n            showHoneymoon: function () {\r\n                App.TopMenu.controller.listenTo(App.TopMenu.controller, 'topmenu:shown', function () {\r\n                    App.TopMenu.controller.trigger('topmenu:changeactivemenuitem', diskupon.DealCategory.Honeymoon);\r\n                });\r\n                this.showHeader();\r\n                this.showAffiliates();\r\n                // TODO:!!!\r\n            },\r\n\r\n            showKuponDetails: function (id, name) {\r\n                this.showHeader();\r\n                this.showAffiliates();\r\n                App.Deals.controller.showDealDetails(id);\r\n            },\r\n\r\n            searchForKupons: function (query) {\r\n                App.TopMenu.controller.listenTo(App.TopMenu.controller, 'topmenu:shown', function () {\r\n                    App.TopMenu.controller.trigger('topmenu:changeactivemenuitem', diskupon.DealCategory.All);\r\n                });\r\n                this.showHeader();\r\n                this.showAffiliates();\r\n                App.Deals.controller.showDealsList({\r\n                    categoryId: diskupon.DealCategory.All,\r\n                    searchQuery: query\r\n                });\r\n            }\r\n        };\r\n    } ();\r\n\r\n    diskupon.AppRouter = Backbone.Marionette.AppRouter.extend({\r\n        execute: function(callback, args) {\r\n            //console.log(args);\r\n        }\r\n    });\r\n\r\n    App.addInitializer(function () {\r\n        new diskupon.AppRouter({\r\n            controller: appRouterController,\r\n            appRoutes: {\r\n                \"\": \"showHomePage\",\r\n                \"kupons/all\": \"showAllKuponsPage\",\r\n                \"kupons/new\": \"showNewKuponsPage\",\r\n                \"kupons/endingsoon\": \"showEndingSoonKuponsPage\",\r\n                \"kupons/hot\": \"showHotKuponsPage\",\r\n                \"kupons/category/:id/:name\": \"showKuponsByCategory\",\r\n                \"kupons/honeymoon\": \"showHoneymoon\",\r\n                \"kupons/details/:id/:name\": \"showKuponDetails\",\r\n                \"kupons/search/:query\": \"searchForKupons\"\r\n            }\r\n        });\r\n    });\r\n\r\n} (window.Diskupon, window.Diskupon.App));","(function (diskupon) {\r\n    diskupon.App.module(\"Cart\", function (Cart, App, Backbone, Marionette, $, _) {\r\n\r\n        var CartItemSummaryModel = Backbone.Model.extend({\r\n            //url: 'api/v1/cart',\r\n            // getCartSummary: function (params) {\r\n            //     this.fetch({ data: $.param(params) });\r\n            // }\r\n        });\r\n\r\n        var CartItemSummaryCollection = Backbone.Collection.extend({\r\n            model: CartItemSummaryModel,\r\n            url: '/api/v1/cart'\r\n        });\r\n\r\n        Cart.Repository = Marionette.Controller.extend({\r\n            initialize: function () {\r\n                //_.bindAll(this, 'search');\r\n            },\r\n            getCartSummary: function () {\r\n                // param later on\r\n                var deferred = $.Deferred();\r\n                var cisColl = new CartItemSummaryCollection();\r\n\r\n                cisColl.on('reset', function (cis) {\r\n                    //console.log(cis);\r\n                    deferred.resolve(cis);\r\n                });\r\n\r\n                cisColl.fetch({ reset: true });\r\n\r\n                return deferred.promise();\r\n            }\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Cart.CartLink\", function (CartLink, App, Backbone, Marionette, $, _) {\r\n\r\n        CartLink.CartLinkView = Marionette.ItemView.extend({\r\n            template: tpl_cart_link,\r\n            events: {\r\n                'click #dsk_showCartSummary': 'showCartSummary'\r\n            },\r\n            initialize: function () {\r\n                _.bindAll(this, 'showCartSummary');\r\n            },\r\n            onRender: function () {\r\n                var dis = this;\r\n                var a = this.$el.find('#cartSummaryModal');\r\n                a.modal({\r\n                    show: false\r\n                });\r\n                a.on('show.bs.modal', function () {\r\n                    dis.$el.find('#cartSummaryModal .dsk-cartList').empty();\r\n                    dis.$el.find('#cartSummaryModal .loader').show();\r\n                });\r\n                a.on('shown.bs.modal', function () {\r\n                    var repo = new App.Cart.Repository();\r\n                    var promise = repo.getCartSummary();\r\n                    promise.done(function (data) {\r\n                        /// data is a collection, so get the models property\r\n                        var models = data.models;\r\n\r\n                        dis.$el.find('#cartSummaryModal .error-cart').hide();\r\n                        dis.$el.find('#cartSummaryModal .empty-cart').hide();\r\n                        if (models.length === 0) {\r\n                            dis.$el.find('#cartSummaryModal .empty-cart').show();\r\n                        }\r\n\r\n                        /// populate cart summary list\r\n                        var rt = dis.$el.find('#cartSummaryModal .dsk-cartList');\r\n                        for (var i = 0; i < models.length; i++) {\r\n                            var d = models[i];\r\n                            var dj = d.toJSON();\r\n                            var re = tpl_cart_summary_item(dj);\r\n                            rt.append(re);\r\n                        }\r\n                    });\r\n                    promise.fail(function () {\r\n                        dis.$el.find('#cartSummaryModal .error-cart').show();\r\n                    });\r\n                    promise.always(function () {\r\n                        dis.$el.find('#cartSummaryModal .loader').hide();\r\n                    });\r\n                });\r\n            },\r\n            showCartSummary: function (e) {\r\n                e.preventDefault();\r\n                var a = this.$el.find('#cartSummaryModal');\r\n                a.modal('show');\r\n            }\r\n        });\r\n\r\n        CartLink.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show');\r\n                this.ContainerRegion = options.ContainerRegion;\r\n            },\r\n\r\n            show: function () {\r\n                var dis = this;\r\n                var view = new CartLink.CartLinkView({\r\n                    el: $(\"#dsk_cartLinkSection\")\r\n                });\r\n                this.listenTo(view, 'cartlink:click', function () {\r\n                    dis.trigger('cartsummary:demandshow');\r\n                });\r\n                this.ContainerRegion.attachView(view);\r\n                this.ContainerRegion.show(view);\r\n            }\r\n        });\r\n\r\n        CartLink.addInitializer(function () {\r\n            console.log('CartLink:Initializer');\r\n            CartLink.controller = new CartLink.Controller({\r\n                ContainerRegion: App.regionManager.get('Header')\r\n            });\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Cart\", function (Cart, App, Backbone, Marionette, $, _) {\r\n\r\n        Cart.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                //_.bindAll(this);\r\n            },\r\n            showCartLink: function () {\r\n                Cart.CartLink.controller.show();\r\n            }\r\n        });\r\n\r\n        Cart.addInitializer(function () {\r\n            console.log('Cart:Initializer');\r\n            Cart.controller = new Cart.Controller({\r\n            });\r\n        });\r\n\r\n        Cart.addFinalizer(function () {\r\n            Cart.controller.close();\r\n            delete Cart.controller;\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Affiliates\", function (Affiliates, App, Backbone, Marionette, $, _) {\r\n\r\n        //this.startWithParent = false;\r\n\r\n        Affiliates.AffiliatesView = Marionette.ItemView.extend({\r\n            template: tpl_affiliates,\r\n            tagName: 'div',\r\n            className: '',\r\n            events: {\r\n\r\n            },\r\n            onRender: function () {\r\n                this.$el.find('#affiliates_stream').flexslider({\r\n                    animation: \"slide\",\r\n                    controlNav: false,\r\n                    animationLoop: true,\r\n                    slideshow: true,\r\n                    itemWidth: 150,\r\n                    pauseOnAction: false,\r\n                    pauseOnHover: false,\r\n                    pausePlay: false,\r\n                    slideshowSpeed: 6000\r\n                });\r\n            }\r\n        });\r\n\r\n        Affiliates.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show');\r\n                this.AffiliatesRegion = options.AffiliatesRegion;\r\n            },\r\n\r\n            show: function () {\r\n                var view = new Affiliates.AffiliatesView({\r\n                });\r\n                this.AffiliatesRegion.show(view);\r\n            }\r\n        });\r\n\r\n        Affiliates.addInitializer(function () {\r\n            Affiliates.controller = new Affiliates.Controller({\r\n                AffiliatesRegion: App.regionManager.get('Affiliates')\r\n            });\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"HomeSlides\", function (HomeSlides, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        HomeSlides.on('start', function () {\r\n\r\n        });\r\n\r\n        HomeSlides.HomeSlidesView = Marionette.ItemView.extend({\r\n            template: tpl_home_slides,\r\n            tagName: 'div',\r\n            className: '',\r\n            events: {\r\n\r\n            },\r\n            onRender: function () {\r\n\r\n            }\r\n        });\r\n\r\n        HomeSlides.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show');\r\n                this.HomeSlidesRegion = options.HomeSlidesRegion;\r\n            },\r\n\r\n            show: function () {\r\n                var view = new HomeSlides.HomeSlidesView({\r\n                });\r\n                this.HomeSlidesRegion.show(view);\r\n            }\r\n        });\r\n\r\n        HomeSlides.addInitializer(function (args) {\r\n            HomeSlides.controller = new HomeSlides.Controller({\r\n                HomeSlidesRegion: args.HomeSlidesRegion\r\n            });\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"RegionSelector\", function (RegionSelector, App, Backbone, Marionette, $, _) {\r\n\r\n        //this.startWithParent = false;\r\n\r\n        RegionSelector.SelectRegionView = Marionette.ItemView.extend({\r\n            template: tpl_region_selector,\r\n            tagName: 'span',\r\n            className: 'dsk-regionPicker',\r\n            events: {\r\n                'change #dsk_select_region': 'regionChanged'\r\n            },\r\n            onRender: function () {\r\n                this.$el.find('#dsk_select_region').val(App.SelectedRegionId.get());\r\n            },\r\n            regionChanged: function (e) {\r\n                //console.log('dsk_select_region change');\r\n                e.preventDefault();\r\n                var selectedRegionId = parseInt($(e.currentTarget).val(), 10);\r\n                //console.log(selectedRegionId);\r\n                // trigger view event\r\n                this.trigger('region:changed', selectedRegionId);\r\n            }\r\n        });\r\n\r\n        RegionSelector.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show', '_regionChanged');\r\n                this.RegionSelectorRegion = options.RegionSelectorRegion;\r\n            },\r\n\r\n            show: function () {\r\n                var that = this,\r\n                    repo = new App.Deals.Repository();\r\n\r\n                var promise = repo.getRegions();\r\n                promise.done(function (regions) {\r\n                    var view = new RegionSelector.SelectRegionView({\r\n                        collection: regions\r\n                    });\r\n\r\n                    // add listener for view event\r\n                    that.listenTo(view, 'region:changed', that._regionChanged);\r\n\r\n                    that.RegionSelectorRegion.show(view);\r\n                });\r\n            },\r\n\r\n            /*** event handler ***/\r\n            _regionChanged: function (selectedRegionId) {\r\n                //console.log('RegionSelector.Controller region:changed');\r\n                this.trigger('region:changed', selectedRegionId);\r\n            }\r\n        });\r\n\r\n        RegionSelector.addInitializer(function () {\r\n            //console.log('RegionSelector.addInitializer');\r\n            RegionSelector.controller = new RegionSelector.Controller({\r\n                RegionSelectorRegion: App.regionManager.get('RegionSelector')\r\n            });\r\n\r\n            RegionSelector.controller.listenTo(RegionSelector.controller, 'region:changed', function (selectedRegionId) {\r\n                // when region changed, set the localstorage\r\n                App.SelectedRegionId.set(selectedRegionId);\r\n                // then redirect to home, reset all work\r\n                window.location.href = '/';\r\n                //Backbone.history.navigate('/', true);\r\n                //Backbone.history.loadUrl();\r\n            });\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"TopMenu\", function (TopMenu, App, Backbone, Marionette, $, _) {\r\n        //this.startWithParent = false;\r\n        TopMenu.TopMenuItemView = Marionette.ItemView.extend({\r\n            tagName: 'li',\r\n            template: tpl_top_menu,\r\n            onBeforeRender: function() {\r\n                var subCategories = this.model.get('SubCategories');\r\n                if (subCategories && subCategories.length > 0) {\r\n                    this.$el.addClass('dropdown');\r\n                    this.model.set('HasSubCategories', true);\r\n                } else {\r\n                    this.model.set('HasSubCategories', false);\r\n                }\r\n\r\n                var catId = parseInt(this.model.get('CategoryId'), 10);\r\n                this.$el.attr('data-key', catId);\r\n            }\r\n        });\r\n\r\n        TopMenu.TopMenuCollectionView = Marionette.CollectionView.extend({\r\n            tagName: 'ul',\r\n            className: 'nav nav-pills dsk-topMenuInner',\r\n            itemView: TopMenu.TopMenuItemView,\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'setActiveMenuItem');\r\n                this.activeTopMenuKey = options.activeTopMenuKey;\r\n                this.activeTopMenuSubKey = options.activeTopMenuSubKey;\r\n            },\r\n            onRender: function () {\r\n\r\n            },\r\n            setActiveMenuItem: function (activeTopMenuKey, activeTopMenuSubKey) {\r\n                this.$el.find('.active').removeClass('active');\r\n                if (activeTopMenuKey) {\r\n                    this.$el.find('[data-key=\"' + activeTopMenuKey + '\"]').addClass('active');\r\n                }\r\n            }\r\n        });\r\n\r\n        /******* top menu for mobile *******/\r\n        TopMenu.TopMenuMobileItemView = Marionette.ItemView.extend({\r\n            tagName: 'li',\r\n            template: tpl_top_menu_mobile,\r\n            onBeforeRender: function() {\r\n                var subCategories = this.model.get('SubCategories');\r\n                if (subCategories && subCategories.length > 0) {\r\n                    this.$el.addClass('dropdown');\r\n                    this.model.set('HasSubCategories', true);\r\n                } else {\r\n                    this.model.set('HasSubCategories', false);\r\n                }\r\n\r\n                var catId = parseInt(this.model.get('CategoryId'), 10);\r\n                this.$el.attr('data-key', catId);\r\n            }\r\n        });\r\n\r\n        TopMenu.TopMenuMobileCollectionView = Marionette.CollectionView.extend({\r\n            tagName: 'ul',\r\n            className: 'nav nav-pills dsk-topMenuInnerMobile',\r\n            itemView: TopMenu.TopMenuMobileItemView,\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'setActiveMenuItem');\r\n                this.activeTopMenuKey = options.activeTopMenuKey;\r\n                this.activeTopMenuSubKey = options.activeTopMenuSubKey;\r\n            },\r\n            onRender: function () {\r\n                //this.setActiveMenuItem(this.activeTopMenuKey, this.activeTopMenuSubKey);\r\n            },\r\n            setActiveMenuItem: function (activeTopMenuKey, activeTopMenuSubKey) {\r\n                this.$el.find('.active').removeClass('active');\r\n                var key = 0;\r\n                if (activeTopMenuSubKey) {\r\n                    key = activeTopMenuSubKey;\r\n                } else if (activeTopMenuKey) {\r\n                    key = activeTopMenuKey;\r\n                }\r\n                if (key) {\r\n                    this.$el.find('[data-key=\"' + key + '\"]').addClass('active');\r\n                }\r\n            }\r\n        });\r\n\r\n        TopMenu.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show', 'setActiveMenuItem');\r\n                this.TopMenuRegion = options.TopMenuRegion;\r\n                this.TopMenuRegionMobile = options.TopMenuRegionMobile;\r\n                this.TopMenuView = undefined;\r\n                this.TopMenuMobileView = undefined;\r\n            },\r\n\r\n            show: function () {\r\n                //console.log('TopMenu:show');\r\n                var that = this;\r\n                var repo = new App.Deals.Repository();\r\n                // fetch data\r\n                var promise = repo.getDealCategories();\r\n                promise.done(function (categories) {\r\n                    var view = new TopMenu.TopMenuCollectionView({\r\n                        collection: categories\r\n                    });\r\n                    that.TopMenuView = view;\r\n                    that.TopMenuRegion.show(view);\r\n\r\n                    var mobileView = new TopMenu.TopMenuMobileCollectionView({\r\n                        collection: categories\r\n                    });\r\n                    that.TopMenuMobileView = mobileView;\r\n                    that.TopMenuRegionMobile.show(mobileView);\r\n\r\n                    that.trigger('topmenu:shown');\r\n                });\r\n                promise.fail(function () {\r\n                });\r\n                promise.always(function () {\r\n                });\r\n            },\r\n\r\n            setActiveMenuItem: function (activeTopMenuKey, activeTopMenuSubKey) {\r\n                //console.log(this);\r\n                this.TopMenuView.setActiveMenuItem(activeTopMenuKey, activeTopMenuSubKey);\r\n                this.TopMenuMobileView.setActiveMenuItem(activeTopMenuKey, activeTopMenuSubKey);\r\n            }\r\n        });\r\n\r\n        TopMenu.addInitializer(function () {\r\n            //console.log('TopMenu.addInitializer');\r\n            TopMenu.controller = new TopMenu.Controller({\r\n                TopMenuRegion: App.regionManager.get('TopMenuInner'),\r\n                TopMenuRegionMobile: App.regionManager.get('TopMenuInnerMobile')\r\n            });\r\n\r\n            TopMenu.controller.listenTo(TopMenu.controller, 'topmenu:changeactivemenuitem', function (activeTopMenuKey, activeTopMenuSubKey) {\r\n                //console.log('topmenu:changeactivemenuitem');\r\n                TopMenu.controller.setActiveMenuItem(activeTopMenuKey, activeTopMenuSubKey);\r\n            });\r\n        });\r\n\r\n        // TopMenu.addFinalizer(function () {\r\n        //     console.log('TopMenu.Finalizer');\r\n        //     TopMenu.controller.close();\r\n        //     delete TopMenu.controller;\r\n        // });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Deals\", function (Deals, App, Backbone, Marionette, $, _) {\r\n\r\n        Deals.DealModel = Backbone.Model.extend({\r\n            initialize: function () {\r\n            },\r\n            url: diskupon.requestUrl('deals'),\r\n            getDeal: function (params) {\r\n                this.fetch({ data: $.param(params) });\r\n            }\r\n        });\r\n\r\n        Deals.DealCollection = Backbone.Collection.extend({\r\n            model: Deals.DealModel,\r\n            url: diskupon.requestUrl('deals'),\r\n            search: function (searchParam) {\r\n                this.fetch({ reset: true, data: $.param(searchParam) });\r\n            }\r\n        });\r\n\r\n        Deals.DealCategoryModel = Backbone.Model.extend({\r\n            initialize: function () {\r\n            }\r\n        });\r\n\r\n        Deals.DealCategoryCollection = Backbone.Collection.extend({\r\n            model: Deals.DealCategoryModel,\r\n            url: diskupon.requestUrl('dealcategories')\r\n        });\r\n\r\n        Deals.RegionModel = Backbone.Model.extend({\r\n            initialize: function () {\r\n            }\r\n        });\r\n\r\n        Deals.RegionCollection = Backbone.Collection.extend({\r\n            model: Deals.RegionModel,\r\n            url: diskupon.requestUrl('regions')\r\n        });\r\n\r\n        Deals.Repository = Marionette.Controller.extend({\r\n            initialize: function () {\r\n                _.bindAll(this, 'search');\r\n\r\n                this.defaultSearchParams = {\r\n                    RegionId: 1, // jakarta\r\n                    CategoryId: 1, // all kupons\r\n                    PageSize: 65000, // num of records per page\r\n                    PageNumber: 1, // 1-based\r\n                    SearchQuery: ''\r\n                };\r\n            },\r\n\r\n            search: function (options) {\r\n                var searchParam = $.extend({}, this.defaultSearchParams, options),\r\n                    deferred = $.Deferred(),\r\n                    dealCollection = new Deals.DealCollection();\r\n\r\n                dealCollection.on('reset', function (deals) {\r\n                    deferred.resolve(deals);\r\n                });\r\n\r\n                dealCollection.search(searchParam);\r\n\r\n                return deferred.promise();\r\n            },\r\n\r\n            getOne: function (id) {\r\n                var dealModel = new Deals.DealModel(),\r\n                    deferred = $.Deferred();\r\n\r\n                dealModel.on('change', function (deal) {\r\n                    //console.log('dealModel.on.change');\r\n                    deferred.resolve(deal);\r\n                });\r\n\r\n                dealModel.getDeal({ DealId: id });\r\n\r\n                return deferred.promise();\r\n            },\r\n\r\n            getDealCategories: function () {\r\n                var deferred = $.Deferred(),\r\n                    categoryCollection = new Deals.DealCategoryCollection();\r\n\r\n                categoryCollection.on('reset', function (categories) {\r\n                    deferred.resolve(categories);\r\n                });\r\n\r\n                categoryCollection.fetch({ reset: true });\r\n\r\n                return deferred.promise();\r\n            },\r\n\r\n            getRegions: function () {\r\n                var deferred = $.Deferred(),\r\n                    regionCollection = new Deals.RegionCollection();\r\n\r\n                regionCollection.on('reset', function (regions) {\r\n                    deferred.resolve(regions);\r\n                });\r\n\r\n                regionCollection.fetch({ reset: true });\r\n\r\n                return deferred.promise();\r\n            }\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (gmapi) {\r\n    if (typeof google === 'undefined') {\r\n        gmapi.init = function () {};\r\n        gmapi.draw = function () {};\r\n        return false;\r\n    }\r\n\r\n    var geocoder;\r\n    var map;\r\n    var infowindow = new google.maps.InfoWindow();\r\n    var marker;\r\n    var lat, lng, infoWindowContent;\r\n    var mapAreaMaxWidth;\r\n\r\n    function setupArea () {\r\n        mapAreaMaxWidth = $('#map-canvas').parent().width();\r\n        //$('#map-canvas').css('max-width', '600px');\r\n        //$('#map-canvas').css('max-height', '400px');\r\n        $('#map-canvas').css('width', '100%');\r\n        $('#map-canvas').css('height', '400px');\r\n    }\r\n\r\n    function initialize (lt, lg, iwc) {\r\n        lat = lt;\r\n        lng = lg;\r\n        infoWindowContent = iwc;\r\n        setupArea();\r\n        geocoder = new google.maps.Geocoder();\r\n        var latlng = new google.maps.LatLng(lat, lng);\r\n        var mapOptions = {\r\n            zoom: 16,\r\n            center: latlng//,\r\n            //mapTypeId: 'roadmap'\r\n        }\r\n        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);\r\n        //map.panBy(0, 200);\r\n        google.maps.event.addListenerOnce(map, 'idle', function () {\r\n            infowindow.open(map, marker);\r\n        });\r\n    }\r\n\r\n    function codeLatLng () {\r\n        // var lat = 40.730885;\r\n        // var lng = -73.997383;\r\n        var latlng = new google.maps.LatLng(lat, lng);\r\n        geocoder.geocode({'latLng': latlng}, function(results, status) {\r\n            if (status == google.maps.GeocoderStatus.OK) {\r\n                if (results[1]) {\r\n                    //map.setZoom(11);\r\n                    marker = new google.maps.Marker({\r\n                        position: latlng,\r\n                        map: map\r\n                    });\r\n                    //infowindow.setContent(results[1].formatted_address);\r\n                    infowindow.setOptions({ maxWidth: mapAreaMaxWidth / 2 });\r\n                    infowindow.setContent(infoWindowContent);\r\n                    //infowindow.open(map, marker);\r\n                } else {\r\n                    console.log('No results found');\r\n                }\r\n            } else {\r\n                console.log('Geocoder failed due to: ' + status);\r\n            }\r\n        });\r\n    }\r\n    //google.maps.event.addDomListener(window, 'load', initialize);\r\n    gmapi.init = initialize;\r\n    gmapi.draw = codeLatLng;\r\n} (window.Diskupon.gmapsapi = window.Diskupon.gmapsapi || {}));\r\n/************************************************************************************************************************/\r\n/************************************************************************************************************************/\r\n(function (diskupon) {\r\n\r\n    diskupon.App.module(\"Deals.Details\", function (DealsDetails, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        DealsDetails.on('start', function () {\r\n\r\n        });\r\n\r\n        DealsDetails.DealsDetailsView = Marionette.ItemView.extend({\r\n            template: tpl_deal_details,\r\n            tagName: 'div',\r\n            className: 'dsk-dealDetails',\r\n            onRender: function () {\r\n                var that = this;\r\n                this.$el.find('#deal_images_navs').flexslider({\r\n                    animation: \"slide\",\r\n                    controlNav: false,\r\n                    animationLoop: false,\r\n                    slideshow: false,\r\n                    itemWidth: 100,\r\n                    asNavFor: '#deal_images'\r\n                });\r\n                this.$el.find('#deal_images').flexslider({\r\n                    animation: \"slide\",\r\n                    controlNav: false,\r\n                    animationLoop: false,\r\n                    slideshow: false,\r\n                    sync: \"#deal_images_navs\"\r\n                });\r\n                this.$el.find('.sliderMain-imgContainer').imgLiquid();\r\n                this.$el.find('#map-canvas').show('fast', function () {\r\n                    // maps of deals location\r\n                    var pkpn = that.model.get('PrimaryKupon');\r\n                    window.hehe = pkpn;\r\n                    if (pkpn.KuponLocation) {\r\n                        var ct = '<h4>' + pkpn.KuponLocation.LocationName + '</h4> \\\r\n                                  <p>' + pkpn.KuponLocation.LocationAddress + '</p> \\\r\n                                 ';\r\n                        //this.$el.find('#dsk_dd_tabs a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\r\n                        //this.$el.find('#dsk_dd_tabs4 a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\r\n                            //debugger;\r\n                            //if ($(e.target).hasClass('dskf-vendorInfo')) {\r\n                                window.Diskupon.gmapsapi.init(pkpn.KuponLocation.Latitude, pkpn.KuponLocation.Longitude, ct);\r\n                                window.Diskupon.gmapsapi.draw();\r\n                            //}\r\n                        //});\r\n                    }\r\n                });\r\n                // this.$el.find('#dsk_dd_tabs a:first').tab('show');\r\n            }\r\n        });\r\n\r\n        DealsDetails.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'showDealsDetails', 'renderDealsDetails');\r\n                this.DealsDetailsRegion = options.DealsDetailsRegion;\r\n                this.DealsDetailsMobileRegion = options.DealsDetailsMobileRegion;\r\n                this.DealId = 0;\r\n            },\r\n\r\n            renderDealsDetails: function (deal) {\r\n                var view = new DealsDetails.DealsDetailsView({\r\n                    model: deal\r\n                });\r\n                this.DealsDetailsRegion.show(view);\r\n\r\n                this.trigger('dealdetails:detailsshown', deal.toJSON());\r\n\r\n                // TODO: details for mobile region\r\n            },\r\n\r\n            showDealsDetails: function () {\r\n                var that = this;\r\n                var repo = new App.Deals.Repository();\r\n\r\n                var promise = repo.getOne(this.DealId);\r\n\r\n                promise.done(function (deal) {\r\n                    that.renderDealsDetails(deal);\r\n                });\r\n            }\r\n        });\r\n\r\n        DealsDetails.addInitializer(function (args) {\r\n            DealsDetails.controller = new DealsDetails.Controller({\r\n                DealsDetailsRegion: args.DealsDetailsRegion,\r\n                DealsDetailsMobileRegion: args.DealsDetailsMobileRegion\r\n            });\r\n\r\n            DealsDetails.controller.listenTo(DealsDetails.controller, 'dealdetails:detailsshown', function (dealModel) {\r\n                //console.log(dealModel.DealCategoryId);\r\n                App.TopMenu.controller.trigger('topmenu:changeactivemenuitem', diskupon.DealCategory.ByCategory, dealModel.DealCategoryId);\r\n            });\r\n        });\r\n\r\n        DealsDetails.addFinalizer(function () {\r\n            //console.log('DealsDetails.addFinalizer');\r\n            DealsDetails.controller.close();\r\n            delete DealsDetails.controller;\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Deals.List\", function (DealsList, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        DealsList.on('start', function () {\r\n        });\r\n\r\n        DealsList.DealsListItemView = Marionette.ItemView.extend({\r\n            template: tpl_deals_item,\r\n            tagName: 'div',\r\n            className: 'dsk-dealContainer pull-left'\r\n        });\r\n\r\n        DealsList.DealsListCollectionView = Marionette.CollectionView.extend({\r\n            tagName: 'div',\r\n            className: 'dsk-listOfDeals clearfix',\r\n            itemView: DealsList.DealsListItemView,\r\n            onRender: function () {\r\n                this.$el.find('.dsk-di-cover').lazyload({\r\n                    //effect: 'fadeIn'\r\n                });\r\n                this.$el.find('.dsk-dealItem').hover(function () {\r\n                    $(this).addClass('hover');\r\n                }, function () {\r\n                    $(this).removeClass('hover');\r\n                });\r\n            }\r\n        });\r\n\r\n        /**** mobile version view ****/\r\n        DealsList.DealsListMobileItemView = Marionette.ItemView.extend({\r\n            template: tpl_deals_item_mobile,\r\n            tagName: 'div',\r\n            className: 'dsk-dealContainer-mobile clearfix'\r\n        });\r\n\r\n        DealsList.DealsListMobileCollectionView = Marionette.CollectionView.extend({\r\n            tagName: 'div',\r\n            className: 'dsk-listOfDeals-mobile clearfix',\r\n            itemView: DealsList.DealsListMobileItemView,\r\n            onRender: function () {\r\n                this.$el.find('.dsk-di-cover-mobile').lazyload({\r\n                    //effect: 'fadeIn'\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        DealsList.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'showDeals', 'renderDeals');\r\n                this.DealsListRegion = options.DealsListRegion;\r\n                this.DealsListMobileRegion = options.DealsListMobileRegion;\r\n                this.SearchParams = {\r\n                    RegionId: 1, // jakarta\r\n                    CategoryId: diskupon.DealCategory.All, // all kupons\r\n                    PageNumber: 1, // 1-based\r\n                    SearchQuery: ''\r\n                };\r\n            },\r\n\r\n            renderDeals: function (deals) {\r\n                //console.log('DealsList.renderDeals');\r\n                if ($(this.DealsListRegion.el).is(':visible')) {\r\n                    var colView = new DealsList.DealsListCollectionView({\r\n                        collection: deals\r\n                    });\r\n                    this.DealsListRegion.show(colView);\r\n                    this.trigger('dealslist:listshown');\r\n                }\r\n\r\n                if ($(this.DealsListMobileRegion.el).is(':visible')) {\r\n                    var mobileColView = new DealsList.DealsListMobileCollectionView({\r\n                        collection: deals\r\n                    });\r\n                    this.DealsListMobileRegion.show(mobileColView);\r\n                    this.trigger('dealslist:listmobileshown');\r\n                }\r\n            },\r\n\r\n            showDeals: function () {\r\n                //console.log('DealsList.showDeals');\r\n                var that = this;\r\n                var repo = new App.Deals.Repository();\r\n                // fetch data\r\n                this.SearchParams.RegionId = App.SelectedRegionId.get();\r\n\r\n                var promise = repo.search(this.SearchParams);\r\n                promise.done(function (deals) {\r\n                    // render the data\r\n                    that.renderDeals(deals);\r\n                });\r\n            }\r\n        });\r\n\r\n        DealsList.addInitializer(function (args) {\r\n            //console.log('DealsList.addInitializer');\r\n            DealsList.controller = new DealsList.Controller({\r\n                DealsListRegion: args.DealsListRegion,\r\n                DealsListMobileRegion: args.DealsListMobileRegion\r\n            });\r\n\r\n            DealsList.controller.listenTo(DealsList.controller, 'dealslist:listshown', function () {\r\n                $(window).trigger('scroll');\r\n            });\r\n            DealsList.controller.listenTo(DealsList.controller, 'dealslist:listmobileshown', function () {\r\n                $(window).trigger('scroll');\r\n            });\r\n        });\r\n\r\n        DealsList.addFinalizer(function () {\r\n            //console.log('DealsList.addFinalizer');\r\n            DealsList.controller.close();\r\n            delete DealsList.controller;\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Deals\", function (Deals, App, Backbone, Marionette, $, _) {\r\n\r\n        var dealListPageLayout = Backbone.Marionette.Layout.extend({\r\n            template: \"#dealListPageLayout_template\",\r\n            regions: {\r\n                HomeSlides: '#dsk_homeSlides',\r\n                MainContent: '#dsk_content',\r\n                MainContentMobile: '#dsk_content_mobile'\r\n            },\r\n            className: 'container'\r\n        });\r\n\r\n        var dealDetailsPageLayout = Backbone.Marionette.Layout.extend({\r\n            template: \"#dealDetailsPageLayout_template\",\r\n            regions: {\r\n                MainContent: '#dsk_content',\r\n                MainContentMobile: '#dsk_content_mobile'\r\n            },\r\n            className: 'container'\r\n        });\r\n\r\n        var submodules = ['Deals.List', 'Deals.Details'];\r\n\r\n        Deals.on('start', function () {\r\n            Deals.listLayout = new dealListPageLayout();\r\n            Deals.detailsLayout = new dealDetailsPageLayout();\r\n        });\r\n\r\n        Deals.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'showDealsList', 'showDealDetails');\r\n            },\r\n\r\n            _renderListLayout: function () {\r\n                Deals.listLayout.render();\r\n                App.regionManager.get('Main').show(Deals.listLayout);\r\n            },\r\n\r\n            _renderDetailsLayout: function () {\r\n                Deals.detailsLayout.render();\r\n                App.regionManager.get('Main').show(Deals.detailsLayout);\r\n            },\r\n\r\n            _startListSubmodule: function () {\r\n                var options = {\r\n                    DealsListRegion: Deals.listLayout.MainContent,\r\n                    DealsListMobileRegion: Deals.listLayout.MainContentMobile\r\n                };\r\n                App.vent.trigger('submodule:start', submodules, 'Deals.List', options);\r\n            },\r\n\r\n            _startDetailsModule: function () {\r\n                var options = {\r\n                    DealsDetailsRegion: Deals.detailsLayout.MainContent,\r\n                    DealsDetailsMobileRegion: Deals.detailsLayout.MainContentMobile\r\n                };\r\n                App.vent.trigger('submodule:start', submodules, 'Deals.Details', options);\r\n            },\r\n\r\n            _startHomeSlidesModule: function () {\r\n                var options = {\r\n                    HomeSlidesRegion: Deals.listLayout.HomeSlides\r\n                };\r\n                App.module(\"HomeSlides\").start(options);\r\n            },\r\n\r\n            showDealsList: function (options) {\r\n                var defaultOptions = {\r\n                    categoryId: diskupon.DealCategory.All,\r\n                    searchQuery: ''\r\n                };\r\n                options = $.extend({}, defaultOptions, options);\r\n\r\n                this._renderListLayout();\r\n                this._startHomeSlidesModule();\r\n                this._startListSubmodule();\r\n\r\n                App.Deals.List.controller.SearchParams.CategoryId = options.categoryId;\r\n                App.Deals.List.controller.SearchParams.SearchQuery = options.searchQuery;\r\n                App.Deals.List.controller.showDeals();\r\n\r\n                App.HomeSlides.controller.show();\r\n            },\r\n\r\n            showDealDetails: function (dealId) {\r\n                this._renderDetailsLayout();\r\n                this._startDetailsModule();\r\n\r\n                App.Deals.Details.controller.DealId = dealId;\r\n                App.Deals.Details.controller.showDealsDetails();\r\n            },\r\n\r\n            showTopDealsGroupByCategory: function () {\r\n                this._renderListLayout();\r\n                this._startHomeSlidesModule();\r\n\r\n                App.HomeSlides.controller.show();\r\n            }\r\n        });\r\n\r\n        Deals.addInitializer(function () {\r\n            Deals.controller = new Deals.Controller({\r\n            });\r\n        });\r\n\r\n        Deals.addFinalizer(function () {\r\n            Deals.controller.close();\r\n            delete Deals.controller;\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","/**************************/\r\n/*\r\n/* move these methods below to another library\r\n/*\r\n/***************************/\r\n\r\n/*** backbone force use POST when fetching ***/\r\nBackbone.ajax = function () {\r\n    var args = Array.prototype.slice.call(arguments);\r\n    if (args[0]) {\r\n        args[0].type = 'POST';\r\n    }\r\n    return Backbone.$.ajax.apply(Backbone.$, args);\r\n};\r\n\r\n// /*** override native console ***/\r\n// (function(){\r\n//     var nativeConsoleLog = console.log;\r\n//     console.log = function (message) {\r\n//         // DO MESSAGE HERE.\r\n//         //nativeConsoleLog.apply(console, arguments);\r\n//         return false;\r\n//     };\r\n// })();\r\n\r\n(function ($) {\r\n    if (NProgress) {\r\n        //NProgress.configure({ ease: 'ease', speed: 500 });\r\n        //NProgress.configure({ trickle: false });\r\n        //NProgress.configure({ trickleRate: 0.02, trickleSpeed: 100 });\r\n    }\r\n\r\n    $(document).ajaxStart(function () {\r\n        if (NProgress) {\r\n            NProgress.start();\r\n        }\r\n    });\r\n    $(document).ajaxStop(function () {\r\n        if (NProgress) {\r\n            NProgress.done(true);\r\n        }\r\n    });\r\n}(jQuery));\r\n\r\nwindow.onerror = function (message, url, lineNumber) {\r\n    console.log(message);\r\n    if (NProgress) {\r\n        NProgress.done(true);\r\n    }\r\n};","function encode (value) {\r\n    var unencoded = value;\r\n    var encoded = encodeURIComponent(unencoded).replace(/'/g,\"%27\").replace(/\"/g,\"%22\");\r\n    return encoded;\r\n}\r\n\r\nfunction decode(value) {\r\n    var encoded = value;\r\n    var decoded = decodeURIComponent(encoded.replace(/\\+/g, \" \"));\r\n    return decoded;\r\n}\r\n\r\n/*** make push state for backbone, intercept anchor click ***/\r\nfunction prepareBackbonePushState () {\r\n    // Use absolute URLs  to navigate to anything not in your Router.\r\n    // Only need this for pushState enabled browsers\r\n    if (Backbone.history && Backbone.history._hasPushState) {\r\n        // Use delegation to avoid initial DOM selection and allow all matching elements to bubble\r\n        $(document).delegate(\"a[href^='/']\", \"click\", function (evt) {\r\n            //console.log('hijacked!!!');\r\n            // Get the anchor href and protcol\r\n            var href = $(this).attr(\"href\");\r\n            var protocol = this.protocol + \"//\";\r\n            // Ensure the protocol is not part of URL, meaning its relative.\r\n            // Stop the event bubbling to ensure the link will not cause a page refresh.\r\n            if (href.slice(protocol.length) !== protocol) {\r\n                evt.preventDefault();\r\n                // Note by using Backbone.history.navigate, router events will not be\r\n                // triggered.  If this is a problem, change this to navigate on your\r\n                // router.\r\n                Backbone.history.navigate(href, true);\r\n            }\r\n        });\r\n    }\r\n}"]}
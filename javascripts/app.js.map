{"version":3,"file":"public\\javascripts\\app.js","sources":["app/scripts/00.app.js","app/scripts/01.approuter.js","app/scripts/approuter-controller-cart.js","app/scripts/approuter-controller-core.js","app/scripts/approuter-controller-kupons.js","app/scripts/cart/cart-data.js","app/scripts/cart/cart-link.js","app/scripts/cart/cart-list.js","app/scripts/cart/cart.js","app/scripts/checkout/checkout-data.js","app/scripts/checkout/checkout.js","app/scripts/checkout/paymentmethods.js","app/scripts/components/affiliates.js","app/scripts/components/home-slides.js","app/scripts/components/region-selector.js","app/scripts/components/top-menu.js","app/scripts/deals/deals-data.js","app/scripts/deals/deals-details.js","app/scripts/deals/deals-list.js","app/scripts/deals/deals.js","app/scripts/deals/grouped-top-deals.js","app/scripts/events.js","app/scripts/hacks.js","app/scripts/utilities.js"],"names":[],"mappingsxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CCZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CCljjrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CCxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CCzzvpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CCjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CCjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A","sourcesContent":["/********************************/\r\n/*\r\n/* Diskupon Starts Here\r\n/*\r\n/********************************/\r\nwindow.Diskupon = {\r\n    DealCategory: {\r\n        All: -11,\r\n        New: -22,\r\n        Hot: -33,\r\n        EndingSoon: -44,\r\n        ByCategory: -55,\r\n        Honeymoon: -66\r\n    },\r\n    //API_HOST: 'diskupon.api',\r\n    API_HOST: 'diskupon.apphb.com',\r\n    requestUrl: function (slug) {\r\n        if (slug.substring(0, 1) === '/') {\r\n            return '//' + this.API_HOST + slug;\r\n        } else {\r\n            return '//' + this.API_HOST + '/api/' + slug;\r\n        }\r\n    }\r\n};\r\n\r\n(function (diskupon) {\r\n    diskupon.App = new Marionette.Application();\r\n    var App = diskupon.App;\r\n\r\n    /*** regions and layouts ***/\r\n    App.regionManager = new Marionette.RegionManager();\r\n    App.regionManager.addRegions({\r\n        Header: '#dsk_header',\r\n        RegionSelector: '#dsk_pick_region',\r\n        TopMenu: '#dsk_topMenu',\r\n        TopMenuInner: '#dsk_topMenu_Inner',\r\n        TopMenuInnerMobile: '#dsk_topMenu_Inner_Mobile',\r\n        Main: '#dsk_main',\r\n        Affiliates: '#dsk_affiliates',\r\n        Footer: '#dsk_footer'\r\n    });\r\n\r\n    /*** event handlers ***/\r\n    App.on('start', function () {\r\n        if (Backbone.history){\r\n            Backbone.history.start({ pushState: true });\r\n            prepareBackbonePushState();\r\n        }\r\n    });\r\n\r\n\r\n    /**************************************************************************************/\r\n    // todo: we can move this to a view\r\n    var headerElementId = App.regionManager.get('Header').el;\r\n    $(document).on('click', (headerElementId + ' #dsk_searchDeals_submit'), function (e) {\r\n        $(headerElementId + ' #dsk_searchDeals_form').submit();\r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n    $(document).on('submit', (headerElementId + ' #dsk_searchDeals_form'), function (e) {\r\n        var query = $(headerElementId + ' #dsk_searchDeals_query').val().trim();\r\n        if (query) {\r\n            var encodedQuery = encode(query);\r\n            window.location.href = '/kupons/search/' + encodedQuery;\r\n            //Backbone.history.navigate('/kupons/search/' + encodedQuery, true);\r\n        }\r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n    $(document).on('click', '.dsk-topMenuInnerMobile li a', function (e) {\r\n        var isCollapsed = $('.dsk-navtoggle').hasClass('collapsed');\r\n        if (!isCollapsed) {\r\n            $('.dsk-navtoggle').trigger('click');\r\n        }\r\n    });\r\n    $(window).load(function () {\r\n        // not sure.. so comment :D\r\n        //diskupon.GlobalEvents.tickRelayoutMasonry();\r\n    });\r\n    $(window).resize(function () {\r\n        if (typeof window.msnry !== 'undefined') {\r\n            window.msnry.layout();\r\n        }\r\n    });\r\n    // end todo\r\n    /**************************************************************************************/\r\n\r\n\r\n    /*** others ***/\r\n    App.SelectedRegionId = {\r\n        get: function () {\r\n            var ls = App.Storage.getItem('ds_regionid');\r\n            if (ls === null) {\r\n                ls = '2'; // change this with jakarta id\r\n            }\r\n            var selectedRegionId = parseInt(ls, 10);\r\n            return selectedRegionId;\r\n        },\r\n        set: function (value) {\r\n            App.Storage.setItem('ds_regionid', value.toString());\r\n        }\r\n    };\r\n\r\n    // can be cookie? but now localStorage\r\n    App.Storage = {};\r\n    var lsStorage = {\r\n        setItem: function (key, value) {\r\n            localStorage.setItem(key, value);\r\n        },\r\n        getItem: function (key) {\r\n            return localStorage.getItem(key);\r\n        }\r\n    };\r\n    var dStorage = {\r\n        setItem: function (key, value) {\r\n        },\r\n        getItem: function (key) {\r\n            return '';\r\n        }\r\n    };\r\n    if (typeof localStorage !== 'undefined') {\r\n        App.Storage = lsStorage;\r\n    } else {\r\n        App.Storage = dStorage;\r\n    }\r\n\r\n} (window.Diskupon));","(function (diskupon, App) {\r\n\r\n    diskupon.AppRouter = Backbone.Marionette.AppRouter.extend({\r\n\r\n    });\r\n\r\n    App.addInitializer(function () {\r\n        new diskupon.AppRouter({\r\n            controller: window.AppRouterController,\r\n            appRoutes: {\r\n                \"\": \"showHomePage\",\r\n                \"kupons/all\": \"showAllKuponsPage\",\r\n                \"kupons/new\": \"showNewKuponsPage\",\r\n                \"kupons/endingsoon\": \"showEndingSoonKuponsPage\",\r\n                \"kupons/hot\": \"showHotKuponsPage\",\r\n                \"kupons/category/:id/:name\": \"showKuponsByCategory\",\r\n                \"kupons/honeymoon\": \"showHoneymoon\",\r\n                \"kupons/details/:id/:name\": \"showKuponDetails\",\r\n                \"kupons/search/:query\": \"searchForKupons\",\r\n                \"checkout\": \"checkout\"\r\n            }\r\n        });\r\n    });\r\n\r\n} (window.Diskupon, window.Diskupon.App));","(function (arc, diskupon, App) {\r\n\r\n    var cc = {\r\n        checkout: function () {\r\n            this.showHeader();\r\n            this.showAffiliates();\r\n            App.Cart.controller.checkout();\r\n        }\r\n    };\r\n\r\n    $.extend(arc, cc);\r\n\r\n} (window.AppRouterController = window.AppRouterController || {}, window.Diskupon, window.Diskupon.App));","(function (arc, diskupon, App) {\r\n\r\n    var ec = {\r\n        stopHeaderModules: function () {\r\n            App.module('RegionSelector').stop();\r\n            App.module('TopMenu').stop();\r\n            App.Cart.controller.stopCartLinkModule();\r\n        },\r\n\r\n        startHeaderModules: function (options) {\r\n            App.module('RegionSelector').start();\r\n            App.module('TopMenu').start(options);\r\n            App.Cart.controller.startCartLinkModule();\r\n        },\r\n\r\n        showHeader: function (options) {\r\n            this.stopHeaderModules();\r\n            this.startHeaderModules(options);\r\n\r\n            App.Cart.controller.showCartLink();\r\n            App.RegionSelector.controller.show();\r\n            App.TopMenu.controller.show();\r\n        },\r\n\r\n        showAffiliates: function () {\r\n            App.module('Affiliates').stop();\r\n            App.module('Affiliates').start();\r\n\r\n            App.Affiliates.controller.show();\r\n        }\r\n    };\r\n\r\n    $.extend(arc, ec);\r\n\r\n} (window.AppRouterController = window.AppRouterController || {}, window.Diskupon, window.Diskupon.App));","(function (arc, diskupon, App) {\r\n\r\n    var kr = {\r\n        showHomePage: function () {\r\n            this.showHeader();\r\n            this.showAffiliates();\r\n            App.Deals.controller.showTopDealsGroupByCategory();\r\n        },\r\n\r\n        showAllKuponsPage: function () {\r\n            this.showHeader({\r\n                CategoryId: diskupon.DealCategory.All\r\n            });\r\n            this.showAffiliates();\r\n            App.Deals.controller.showDealsList({\r\n                categoryId: diskupon.DealCategory.All,\r\n                searchQuery: ''\r\n            });\r\n        },\r\n\r\n        showNewKuponsPage: function () {\r\n            this.showHeader({\r\n                CategoryId: diskupon.DealCategory.New\r\n            });\r\n            this.showAffiliates();\r\n            App.Deals.controller.showDealsList({\r\n                categoryId: diskupon.DealCategory.New,\r\n                searchQuery: ''\r\n            });\r\n        },\r\n\r\n        showEndingSoonKuponsPage: function () {\r\n            this.showHeader({\r\n                CategoryId: diskupon.DealCategory.EndingSoon\r\n            });\r\n            this.showAffiliates();\r\n            App.Deals.controller.showDealsList({\r\n                categoryId: diskupon.DealCategory.EndingSoon,\r\n                searchQuery: ''\r\n            });\r\n        },\r\n\r\n        showHotKuponsPage: function () {\r\n            this.showHeader({\r\n                CategoryId: diskupon.DealCategory.Hot\r\n            });\r\n            this.showAffiliates();\r\n            App.Deals.controller.showDealsList({\r\n                categoryId: diskupon.DealCategory.Hot,\r\n                searchQuery: ''\r\n            });\r\n        },\r\n\r\n        showKuponsByCategory: function (id, name) {\r\n            this.showHeader({\r\n                CategoryId: diskupon.DealCategory.ByCategory,\r\n                SubCategoryId: id\r\n            });\r\n            this.showAffiliates();\r\n            App.Deals.controller.showDealsList({\r\n                categoryId: id,\r\n                searchQuery: ''\r\n            });\r\n        },\r\n\r\n        showHoneymoon: function () {\r\n            this.showHeader({\r\n                CategoryId: diskupon.DealCategory.Honeymoon\r\n            });\r\n            this.showAffiliates();\r\n        },\r\n\r\n        showKuponDetails: function (id, name) {\r\n            this.showHeader();\r\n            this.showAffiliates();\r\n            App.Deals.controller.showDealDetails(id);\r\n        },\r\n\r\n        searchForKupons: function (query) {\r\n            this.showHeader({\r\n                CategoryId: diskupon.DealCategory.All\r\n            });\r\n            this.showAffiliates();\r\n            App.Deals.controller.showDealsList({\r\n                categoryId: diskupon.DealCategory.All,\r\n                searchQuery: query\r\n            });\r\n        }\r\n    };\r\n\r\n    $.extend(arc, kr);\r\n\r\n} (window.AppRouterController = window.AppRouterController || {}, window.Diskupon, window.Diskupon.App));","(function (diskupon) {\r\n    diskupon.App.module(\"Cart\", function (Cart, App, Backbone, Marionette, $, _) {\r\n\r\n        var CartSummaryModel = Backbone.Model.extend({\r\n            idAttribute: 'CartSummaryItemId',\r\n            url: '/api/v1/cartsummary',\r\n            initialize: function () {\r\n                if (typeof Backbone.Memento !== 'undefined') {\r\n                    this.memento = new Backbone.Memento(this);\r\n                    //this.restart = this.memento.restart;\r\n                }\r\n            },\r\n            deleteData: function (params) {\r\n                //this.memento.store();\r\n                var dis = this;\r\n                var d = $.Deferred();\r\n                this.destroy({\r\n                    data: {\r\n                        CartSummaryItemId: this.id,\r\n                        KuponId: this.get('KuponId'),\r\n                        CartInfo: params\r\n                    },\r\n                    wait: true,\r\n                    //processData: true,\r\n                    success: function (model, response, options) {\r\n                        d.resolve();\r\n                    },\r\n                    error: function (model, xhr, options) {\r\n                        d.reject();\r\n                    }\r\n                });\r\n                return d.promise();\r\n            },\r\n            saveDataChanges: function (params) {\r\n                var dis = this;\r\n                var data = this.changedAttributes();\r\n                data.CartInfo = params;\r\n                this.save(data, {\r\n                    wait: true,\r\n                    success: function (model, response, options) {\r\n                    },\r\n                    error: function (model, response, options) {\r\n                        dis.memento.restore();\r\n                    }\r\n                });\r\n            },\r\n            substractQty: function (params) {\r\n                this.memento.store();\r\n\r\n                /*** update ***/\r\n                var qty = parseInt(this.get('QtyBought'), 10);\r\n                if (qty <= 0) {\r\n                    return false;\r\n                }\r\n                qty--;\r\n                var ppu = this.get('PricePerUnit');\r\n                var price = Math.ceil(qty * ppu);\r\n                this.set({ QtyBought: qty, Price: price });\r\n                /*** end update ***/\r\n\r\n                this.saveDataChanges(params);\r\n            },\r\n            addQty: function (params) {\r\n                this.memento.store();\r\n\r\n                /*** update ***/\r\n                var qty = parseInt(this.get('QtyBought'), 10);\r\n                qty++;\r\n                var ppu = this.get('PricePerUnit');\r\n                var price = Math.ceil(qty * ppu);\r\n                this.set({ QtyBought: qty, Price: price });\r\n                /*** end update ***/\r\n\r\n                this.saveDataChanges(params);\r\n            }\r\n        });\r\n\r\n        var CartSummaryCollection = Backbone.Collection.extend({\r\n            model: CartSummaryModel,\r\n            url: '/api/v1/cartsummary',\r\n            getData: function (params) {\r\n                this.fetch({ reset: true, data: $.param(params) });\r\n            },\r\n            subTotal: function () {\r\n                var st = 0;\r\n                this.each(function (m) {\r\n                    st += parseInt(m.get('Price'), 10);\r\n                });\r\n                return st;\r\n            },\r\n            qtyTotal: function () {\r\n                var q = 0;\r\n                this.each(function (m) {\r\n                    q += parseInt(m.get('QtyBought'), 10);\r\n                });\r\n                return q;\r\n            }\r\n        });\r\n\r\n        var CartTotalModel = Backbone.Model.extend({\r\n            url: '/api/v1/carttotal',\r\n            getData: function (params) {\r\n                this.fetch({ reset: true, data: $.param(params) });\r\n            }\r\n        });\r\n\r\n        /*\r\n            Cart model:\r\n            CartId,\r\n            CartToken,\r\n            CustomerId,\r\n            CartTimestamp,\r\n            CartItems,\r\n            CreatedDate,\r\n            UpdatedDate\r\n        */\r\n        var CartModel = Backbone.Model.extend({\r\n            url: '/api/v1/cart',\r\n            fetchById: function (cartId) {\r\n                this.fetch({ reset: true, data: $.param({ CartId: cartId }) });\r\n            }\r\n        });\r\n\r\n        /*\r\n            Cart Item Model:\r\n            CartItemId,\r\n            CartId,\r\n            DealId,\r\n            KuponId,\r\n            QtyBought,\r\n            CreatedDate,\r\n            UpdatedDate\r\n        */\r\n        // var CartItemModel = Backbone.Model.extend({\r\n        //     idAttribute: 'CartItemId',\r\n        //     url: '/api/v1/cart',\r\n        //     initialize: function () {\r\n        //         if (typeof Backbone.Memento !== 'undefined') {\r\n        //             this.memento = new Backbone.Memento(this);\r\n        //         }\r\n        //     }\r\n        // });\r\n\r\n        /*** Repositories ***/\r\n        Cart.Repository = Marionette.Controller.extend({\r\n            initialize: function () {\r\n                //_.bindAll(this, 'search');\r\n            },\r\n\r\n            getCartSummary: function (params) {\r\n                var deferred = $.Deferred();\r\n\r\n                var cisColl = new CartSummaryCollection();\r\n                cisColl.on('reset', function (cis) {\r\n                    deferred.resolve(cis);\r\n                });\r\n                cisColl.getData(params);\r\n\r\n                return deferred.promise();\r\n            },\r\n\r\n            getCartTotal: function (params) {\r\n                var deferred = $.Deferred();\r\n\r\n                var ctModel = new CartTotalModel();\r\n                ctModel.on('change', function (cartTotal) {\r\n                    deferred.resolve(cartTotal);\r\n                });\r\n                ctModel.getData(params);\r\n\r\n                return deferred.promise();\r\n            },\r\n\r\n            addKuponToCart: function (params, success, fail) {\r\n                var params2 = {\r\n                    CartInfo: params.CartInfo,\r\n                    DealId: params.DealId,\r\n                    SelectedKupons: params.SelectedKupons\r\n                };\r\n                var cb = function (data, textStatus, jqXHR) {\r\n                    if (typeof success === 'function') {\r\n                        success(data);\r\n                    }\r\n                };\r\n                var f = function () {\r\n                    if (typeof fail === 'function') {\r\n                        fail();\r\n                    }\r\n                };\r\n                var a = function () {\r\n\r\n                };\r\n                $.post('/api/v1/addtocart', params2, cb, 'json').fail(f).always(a);\r\n            },\r\n\r\n            getCart: function (cartId) {\r\n                var deferred = $.Deferred();\r\n\r\n                var cModel = new CartModel();\r\n                cModel.on('change', function (cartModel) {\r\n                    deferred.resolve(cartModel);\r\n                });\r\n                cModel.fetchById(cartId);\r\n\r\n                return deferred.promise();\r\n            }\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Cart.CartLink\", function (CartLink, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        CartLink.CartSummaryEmptyView = Marionette.ItemView.extend({\r\n            template: tpl_cart_summary_empty\r\n        });\r\n\r\n        /// item view for cart summary\r\n        CartLink.CartSummaryItemView = Marionette.ItemView.extend({\r\n            tagName: 'li',\r\n            className: 'media dsk-csi',\r\n            template: tpl_cart_summary_item,\r\n            events: {\r\n                'click .dsk-csi-addQty': 'addQty',\r\n                'click .dsk-csi-substractQty': 'substractQty',\r\n                'click .dsk-csi-del': 'deleteSummaryCartItem'\r\n            },\r\n            initialize: function () {\r\n                this.model.on('change', this.render, this);\r\n            },\r\n            /// add qty of an item, trigger event to parent view\r\n            addQty: function (e) {\r\n                e.preventDefault();\r\n                this.trigger('cartsummaryitem:qtyadded');\r\n            },\r\n            /// substract qty of an item, trigger event to parent view\r\n            substractQty: function (e) {\r\n                e.preventDefault();\r\n                this.trigger('cartsummaryitem:qtysubstracted');\r\n            },\r\n            /// delete the cart item, trigger event to parent view\r\n            deleteSummaryCartItem: function (e) {\r\n                e.preventDefault();\r\n                this.trigger('cartsummaryitem:deleted');\r\n            }\r\n        });\r\n\r\n        /// cart summary view, holding list of cart items in a summary view\r\n        CartLink.CartSummaryView = Marionette.CompositeView.extend({\r\n            itemView: CartLink.CartSummaryItemView,\r\n            template: tpl_cart_summary,\r\n            itemViewContainer: '#dsk_cartList',\r\n            emptyView: CartLink.CartSummaryEmptyView,\r\n            onRender: function () {\r\n                var dis = this;\r\n                this.checkListStatus();\r\n                this.renderCartTotals();\r\n                // refresh the cart total after open\r\n                this.trigger('cartsummary:updatecarttotal');\r\n            },\r\n            checkListStatus: function () {\r\n                if (this.collection.length > 0) {\r\n                    this.trigger('cartsummary:notempty');\r\n                } else {\r\n                    this.trigger('cartsummary:empty');\r\n                }\r\n            },\r\n            renderCartTotals: function () {\r\n                //2 items : 2,324,534\r\n                var ct = this.collection.qtyTotal() + ' items, subtotal: ' + accounting.formatNumber(this.collection.subTotal(), 0);\r\n                this.$el.find('.dsk-cartTotals p span').html(ct);\r\n            }\r\n        });\r\n\r\n        CartLink.CartLinkView = Marionette.ItemView.extend({\r\n            template: tpl_cart_link,\r\n            events: {\r\n                'click #dsk_showCartSummary': 'showCartSummaryModal',\r\n                'click #dsk_checkoutButton': 'navigateCheckout',\r\n                'click #dsk_closeCartButton': 'closeThisView'\r\n            },\r\n            initialize: function () {\r\n                _.bindAll(this, 'showCartSummaryModal');\r\n                this.csView = null;\r\n                this.csRegion = null;\r\n            },\r\n            closeThisView: function () {\r\n                this.$el.find('button.close').trigger('click');\r\n            },\r\n            navigateCheckout: function () {\r\n                //window.location.href = '/checkout';\r\n                var a = this.$el.find('#cartSummaryModal');\r\n                a.modal('hide');\r\n                a.on('hidden.bs.modal', function () {\r\n                    Backbone.history.navigate('/checkout', true);\r\n                });\r\n            },\r\n            closeCartSummaryView: function () {\r\n                if (this.csView) {\r\n                    this.csView.close();\r\n                }\r\n            },\r\n            showLoader: function () {\r\n                this.$el.find('#cartSummaryModal .loader').show();\r\n            },\r\n            hideLoader: function () {\r\n                this.$el.find('#cartSummaryModal .loader').hide();\r\n            },\r\n            showError: function () {\r\n                this.$el.find('#cartSummaryModal .error-cart').show();\r\n            },\r\n            hideError: function () {\r\n                this.$el.find('#cartSummaryModal .error-cart').hide();\r\n            },\r\n            showCartSummaryView: function (data) {\r\n                var dis = this;\r\n                /// data is a backbone collection\r\n                var models = data;\r\n                // hide error message\r\n                this.hideError();\r\n\r\n                // prepare viewing are and view\r\n                var cartSummaryRegion = Backbone.Marionette.Region.extend({\r\n                    el: this.$el.find('#cartSummaryModal #dsk_cartSummaryContainer')\r\n                });\r\n\r\n                var cartSummaryView = new CartLink.CartSummaryView({\r\n                    collection: models\r\n                });\r\n\r\n                cartSummaryView.on('itemview:cartsummaryitem:qtyadded', function (itemView) {\r\n                    dis.trigger('cartsummary:item:qtyadded', itemView);\r\n                });\r\n\r\n                cartSummaryView.on('itemview:cartsummaryitem:qtysubstracted', function (itemView) {\r\n                    dis.trigger('cartsummary:item:qtysubstracted', itemView);\r\n                });\r\n\r\n                cartSummaryView.on('itemview:cartsummaryitem:deleted', function (itemView) {\r\n                    dis.trigger('cartsummary:item:deleted', itemView);\r\n                });\r\n\r\n                cartSummaryView.on('cartsummary:updatecarttotal', function (itemView) {\r\n                    dis.trigger('cartsummary:demandcarttotal');\r\n                });\r\n\r\n                cartSummaryView.on('cartsummary:notempty', function () {\r\n                    dis.$el.find('#dsk_checkoutButton').prop('disabled', false);\r\n                    dis.$el.find('#dsk_closeCartButton').prop('disabled', false);\r\n                });\r\n\r\n                cartSummaryView.on('cartsummary:empty', function () {\r\n                    dis.$el.find('#dsk_checkoutButton').prop('disabled', true);\r\n                    dis.$el.find('#dsk_closeCartButton').prop('disabled', true);\r\n                });\r\n\r\n                this.csView = cartSummaryView;\r\n                this.csRegion = new cartSummaryRegion();\r\n                this.csRegion.show(this.csView);\r\n            },\r\n            onRender: function () {\r\n                var dis = this;\r\n                var a = this.$el.find('#cartSummaryModal');\r\n\r\n                a.modal({ show: false });\r\n\r\n                a.on('show.bs.modal', function () {\r\n                    dis.closeCartSummaryView();\r\n                    dis.showLoader();\r\n                });\r\n\r\n                a.on('shown.bs.modal', function () {\r\n                    dis.trigger('cartsummary:shown');\r\n                });\r\n\r\n                this.trigger('cartsummary:demandcarttotal');\r\n            },\r\n            renderCartCount: function (cartTotalModel) {\r\n                var q = 0,\r\n                    k = 0,\r\n                    j = {};\r\n                if (this.csView) {\r\n                    this.csView.collection.each(function (m) {\r\n                        q += parseInt(m.QtyBought, 10);\r\n                    });\r\n                    j = {\r\n                        Kinds: this.csView.collection.length,\r\n                        Qty: q\r\n                    };\r\n                } else {\r\n                    _.each(cartTotalModel.attributes, function (m) {\r\n                        q += parseInt(m.QtyBought, 10);\r\n                        k++;\r\n                    });\r\n                    j = {\r\n                        Kinds: k,\r\n                        Qty: q\r\n                    };\r\n                }\r\n                this.$el.find('#dsk_showCartSummary .badge').html(j.Kinds);\r\n            },\r\n            renderCartCountEmpty: function () {\r\n                this.$el.find('#dsk_showCartSummary .badge').html('0');\r\n            },\r\n            showCartSummaryModal: function (e) {\r\n                if (typeof e !== 'undefined') {\r\n                    e.preventDefault();\r\n                }\r\n                var a = this.$el.find('#cartSummaryModal');\r\n                a.modal('show');\r\n            }\r\n        });\r\n\r\n        CartLink.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show', 'setupEventListeners');\r\n                this.ContainerRegion = options.ContainerRegion;\r\n                this.View = null;\r\n            },\r\n\r\n            setupEventListeners: function (cartLinkView) {\r\n                var dis = this;\r\n                // cart link view event - user/customer demand to show cart summary\r\n                this.listenTo(cartLinkView, 'cartsummary:shown', function () {\r\n                    var ci = App.Cart.controller.getCartInfo();\r\n                    dis.getCartSummary({\r\n                        cartInfo: ci,\r\n                        success: function (data) {\r\n                            cartLinkView.showCartSummaryView(data);\r\n                        },\r\n                        fail: function () {\r\n                            cartLinkView.showError();\r\n                        },\r\n                        done: function () {\r\n                            cartLinkView.hideLoader();\r\n                        }\r\n                    });\r\n                });\r\n                // cart total badge besides cart link\r\n                this.listenTo(cartLinkView, 'cartsummary:demandcarttotal', function () {\r\n                    dis.updateCartCount();\r\n                });\r\n                this.listenTo(cartLinkView, 'cartsummary:item:qtyadded', function (itemView) {\r\n                    var ci = App.Cart.controller.getCartInfo();\r\n                    itemView.model.addQty(ci);\r\n                    cartLinkView.csView.renderCartTotals();\r\n                    cartLinkView.trigger('cartsummary:demandcarttotal');\r\n                });\r\n                this.listenTo(cartLinkView, 'cartsummary:item:qtysubstracted', function (itemView) {\r\n                    var ci = App.Cart.controller.getCartInfo();\r\n                    itemView.model.substractQty(ci);\r\n                    cartLinkView.csView.renderCartTotals();\r\n                    cartLinkView.trigger('cartsummary:demandcarttotal');\r\n                });\r\n                this.listenTo(cartLinkView, 'cartsummary:item:deleted', function (itemView) {\r\n                    var ci = App.Cart.controller.getCartInfo();\r\n                    var p = itemView.model.deleteData(ci);\r\n                    p.done(function () {\r\n                        itemView.close();\r\n                        cartLinkView.trigger('cartsummary:demandcarttotal');\r\n                    });\r\n                    p.always(function () {\r\n                        cartLinkView.csView.checkListStatus();\r\n                        cartLinkView.csView.renderCartTotals();\r\n                    });\r\n                });\r\n            },\r\n\r\n            show: function () {\r\n                var cartLinkView = new CartLink.CartLinkView({\r\n                    el: $(\"#dsk_cartLinkSection\")\r\n                });\r\n                this.View = cartLinkView;\r\n                this.setupEventListeners(cartLinkView);\r\n                this.ContainerRegion.attachView(cartLinkView);\r\n                this.ContainerRegion.show(cartLinkView);\r\n            },\r\n\r\n            getCartSummary: function (params) {\r\n                var repo = new App.Cart.Repository();\r\n                var promise = repo.getCartSummary(params.cartInfo);\r\n                promise.done(function (cartSummaryItems) {\r\n                    if (typeof params.success === 'function') {\r\n                        params.success(cartSummaryItems);\r\n                    }\r\n                });\r\n                promise.fail(function () {\r\n                    if (typeof params.fail === 'function') {\r\n                        params.fail();\r\n                    }\r\n                });\r\n                promise.always(function () {\r\n                    if (typeof params.done === 'function') {\r\n                        params.done();\r\n                    }\r\n                });\r\n            },\r\n\r\n            getCartTotal: function (params) {\r\n                var repo = new App.Cart.Repository();\r\n                var promise = repo.getCartTotal(params.cartInfo);\r\n                promise.done(function (cartTotal) {\r\n                    if (typeof params.success === 'function') {\r\n                        params.success(cartTotal);\r\n                    }\r\n                });\r\n                promise.fail(function () {\r\n                    if (typeof params.fail === 'function') {\r\n                        params.fail();\r\n                    }\r\n                });\r\n                promise.always(function () {\r\n                    if (typeof params.done === 'function') {\r\n                        params.done();\r\n                    }\r\n                });\r\n            },\r\n\r\n            updateCartCount: function () {\r\n                var ci = App.Cart.controller.getCartInfo(),\r\n                    cartLinkView = this.View;\r\n                this.getCartTotal({\r\n                    cartInfo: ci,\r\n                    success: function (data) {\r\n                        if (cartLinkView) {\r\n                            cartLinkView.renderCartCount(data);\r\n                        }\r\n                    },\r\n                    fail: function () {\r\n                        if (cartLinkView) {\r\n                            cartLinkView.renderCartCountEmpty(data);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        CartLink.addInitializer(function () {\r\n            CartLink.controller = new CartLink.Controller({\r\n                ContainerRegion: App.regionManager.get('Header')\r\n            });\r\n            App.vent.on(\"selectkuponandbuy:gotocart\", function () {\r\n                window.scroll(0, 0);\r\n                if (CartLink.controller.View) {\r\n                    CartLink.controller.View.showCartSummaryModal();\r\n                }\r\n            });\r\n            App.commands.setHandler('updatecartcountaftersuccessfuladdtocart', function () {\r\n                CartLink.controller.updateCartCount();\r\n            });\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));\r\n\r\n","(function (diskupon) {\r\n    diskupon.App.module(\"Cart.CartList\", function (CartList, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        var CartListView = Marionette.ItemView.extend({\r\n            template: tpl_cart_list,\r\n            className: 'dsk-vcCartList',\r\n            events: {\r\n\r\n            },\r\n            initialize: function () {\r\n                //_.bindAll(this, 'showCartSummaryModal');\r\n            }\r\n        });\r\n\r\n        CartList.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show', 'renderCartList');\r\n                this.Region = options.Region;\r\n            },\r\n            renderCartList: function (cartModel) {\r\n                var view = new CartListView({\r\n                    model: cartModel\r\n                });\r\n                this.Region.show(view);\r\n            },\r\n            show: function () {\r\n                var dis = this;\r\n                var repo = new App.Cart.Repository();\r\n                var promise = repo.getCart(234);\r\n                promise.done(function (cartModel) {\r\n                    dis.renderCartList(cartModel);\r\n                });\r\n                promise.fail(function () {\r\n\r\n                });\r\n            }\r\n        });\r\n\r\n        CartList.addInitializer(function (args) {\r\n            CartList.controller = new CartList.Controller({\r\n                Region: args.Region\r\n            });\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));\r\n\r\n","(function (diskupon) {\r\n    diskupon.App.module(\"Cart\", function (Cart, App, Backbone, Marionette, $, _) {\r\n\r\n        function generateCartInfo () {\r\n            // dummy param sent to server, meaning this is a new cart, will generate new token, timestamp, etc\r\n            var cartInfo = {\r\n                CartId: parseInt((-1 * chance.natural({ max: 2147483647 })), 10),\r\n                Token: chance.guid(), // cart identifier\r\n                Timestamp: moment().utc().valueOf(), // timestamp used to validate cart\r\n                UserId: parseInt((-1 * chance.natural({ max: 2147483647 })), 10) // userid of current logged in member. If no member / guest, return < 0\r\n            };\r\n            return cartInfo;\r\n        }\r\n\r\n        Cart.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                //_.bindAll(this);\r\n            },\r\n\r\n            startCartLinkModule: function () {\r\n                App.module('Cart.CartLink').start();\r\n            },\r\n\r\n            stopCartLinkModule: function () {\r\n                App.module('Cart.CartLink').stop();\r\n            },\r\n\r\n            getCartInfo: function () {\r\n                var inStorage = App.Storage.getItem('ds_cartInfo'),\r\n                    jCartInfo,\r\n                    emptyStorage = false;\r\n\r\n                if (!inStorage) { // localstorage is null\r\n                    emptyStorage = true;\r\n                } else {\r\n                    var is = JSON.parse(inStorage);\r\n                    if ($.isEmptyObject(is)) {\r\n                        emptyStorage = true;\r\n                    }\r\n                }\r\n\r\n                if (emptyStorage) {\r\n                    jCartInfo = generateCartInfo();\r\n                    var sCartInfo = JSON.stringify(jCartInfo);\r\n                    App.Storage.setItem('ds_cartInfo', sCartInfo);\r\n                }\r\n\r\n                inStorage = App.Storage.getItem('ds_cartInfo');\r\n                jCartInfo = JSON.parse(inStorage);\r\n                return jCartInfo;\r\n            },\r\n\r\n            storeCartInfo: function (jCartInfo) {\r\n                var sCartInfo = JSON.stringify(jCartInfo);\r\n                App.Storage.setItem('ds_cartInfo', sCartInfo);\r\n            },\r\n\r\n            showCartLink: function () {\r\n                Cart.CartLink.controller.show();\r\n            },\r\n\r\n            addKuponToCart: function (params) {\r\n                var dis = this,\r\n                    cartInfo = this.getCartInfo(),\r\n                    repo = new App.Cart.Repository();\r\n                var params2 = {\r\n                    CartInfo: cartInfo,\r\n                    DealId: params.Deal.DealId,\r\n                    SelectedKupons: params.SelectedKupons\r\n                };\r\n                repo.addKuponToCart(params2, function (data) {\r\n                    // data suppose to be CartInfo\r\n                    var ci = {\r\n                        CartId: data.CartId,\r\n                        Token: data.Token,\r\n                        Timestamp: data.Timestamp,\r\n                        UserId: data.UserId\r\n                    };\r\n                    dis.storeCartInfo(ci);\r\n                    App.commands.execute('updatecartcountaftersuccessfuladdtocart');\r\n                    App.vent.trigger(\"selectkuponandbuy:success\");\r\n\r\n                }, function () {\r\n                    // add kupon to cart fail, show message?\r\n                    App.vent.trigger(\"selectkuponandbuy:failed\");\r\n                });\r\n            },\r\n\r\n            checkout: function () {\r\n                App.module('Checkout').stop();\r\n                App.module('Checkout').start();\r\n\r\n                App.Checkout.controller.show();\r\n            }\r\n        });\r\n\r\n        Cart.addInitializer(function () {\r\n            Cart.controller = new Cart.Controller({\r\n            });\r\n            App.commands.setHandler('addkupontocart', function (params) {\r\n                Cart.controller.addKuponToCart(params);\r\n            });\r\n        });\r\n\r\n        Cart.addFinalizer(function () {\r\n            Cart.controller.close();\r\n            delete Cart.controller;\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Checkout\", function (Checkout, App, Backbone, Marionette, $, _) {\r\n\r\n        var PaymentMethodsModel = Backbone.Model.extend({\r\n            url: '/api/v1/paymentmethods',\r\n            initialize: function () {\r\n                // if (typeof Backbone.Memento !== 'undefined') {\r\n                //     this.memento = new Backbone.Memento(this);\r\n\r\n                // }\r\n            },\r\n            getData: function () {\r\n                // this.fetch({ reset: true, data: $.param({}) });\r\n                this.fetch({ reset: true });\r\n            }\r\n        });\r\n\r\n        /*** Repositories ***/\r\n        Checkout.Repository = Marionette.Controller.extend({\r\n            initialize: function () {\r\n                //_.bindAll(this, 'search');\r\n            },\r\n\r\n            getPaymentMethods: function () {\r\n                var deferred = $.Deferred();\r\n\r\n                var model = new PaymentMethodsModel();\r\n                model.on('change', function (remodel) {\r\n                    deferred.resolve(remodel);\r\n                });\r\n                cModel.getData();\r\n\r\n                return deferred.promise();\r\n            }\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Checkout\", function (Checkout, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        var CheckoutLayout = Marionette.Layout.extend({\r\n            template: tpl_checkout,\r\n            regions: {\r\n                CartList: '#dsk_vcCartList',\r\n                PaymentMethods: '#dsk_vcPaymentMethods',\r\n                CustomerDetails: '#dsk_vcCustomerDetails'\r\n            },\r\n            onShow: function () {\r\n                this.$el.find('#dsk_vcAgreeTC').iCheck({\r\n                    checkboxClass: 'icheckbox_flat-green',\r\n                    radioClass: 'iradio_flat-green',\r\n                    increaseArea: '20%'\r\n                });\r\n            }\r\n        });\r\n\r\n        Checkout.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show', 'startAndShowCartList', 'startAndShowPaymentMethods');\r\n                this.Layout = new CheckoutLayout();\r\n            },\r\n            startAndShowCartList: function () {\r\n                App.module('Cart.CartList').stop();\r\n                App.module('Cart.CartList').start({\r\n                    Region: this.Layout.CartList\r\n                });\r\n\r\n                App.Cart.CartList.controller.show();\r\n            },\r\n            startAndShowPaymentMethods: function () {\r\n                App.module('Checkout.PaymentMethods').stop();\r\n                App.module('Checkout.PaymentMethods').start({\r\n                    Region: this.Layout.PaymentMethods\r\n                });\r\n\r\n                App.Checkout.PaymentMethods.controller.show();\r\n            },\r\n            show: function () {\r\n                // render layout\r\n                this.Layout.render();\r\n                App.regionManager.get('Main').show(this.Layout);\r\n\r\n                this.startAndShowCartList();\r\n                this.startAndShowPaymentMethods();\r\n            }\r\n        });\r\n\r\n        Checkout.addInitializer(function () {\r\n            Checkout.controller = new Checkout.Controller({\r\n\r\n            });\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));\r\n\r\n","(function (diskupon) {\r\n    diskupon.App.module(\"Checkout.PaymentMethods\", function (PaymentMethods, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        var PaymentMethodsView = Marionette.ItemView.extend({\r\n            template: tpl_payment_methods,\r\n            className: 'dsk-vcPaymentMethods',\r\n            events: {\r\n\r\n            },\r\n            initialize: function () {\r\n            },\r\n            onShow: function () {\r\n                this.$el.find('.rb-paymentMethod').iCheck({\r\n                    checkboxClass: 'icheckbox_flat-green',\r\n                    radioClass: 'iradio_flat-green',\r\n                    increaseArea: '20%'\r\n                });\r\n            }\r\n        });\r\n\r\n        PaymentMethods.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show', 'renderPaymentMethods');\r\n                this.Region = options.Region;\r\n            },\r\n            renderPaymentMethods: function (model) {\r\n                var view = new PaymentMethodsView({\r\n                    model: model\r\n                });\r\n                this.Region.show(view);\r\n            },\r\n            show: function () {\r\n                var dis = this;\r\n                // var repo = new App.Checkout.Repository();\r\n                // var promise = repo.getPaymentMethods();\r\n                // promise.done(function (model) {\r\n                //     dis.renderPaymentMethods(model);\r\n                // });\r\n                // promise.fail(function () {\r\n\r\n                // });\r\n                dis.renderPaymentMethods();\r\n            }\r\n        });\r\n\r\n        PaymentMethods.addInitializer(function (args) {\r\n            PaymentMethods.controller = new PaymentMethods.Controller({\r\n                Region: args.Region\r\n            });\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));\r\n\r\n","(function (diskupon) {\r\n    diskupon.App.module(\"Affiliates\", function (Affiliates, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        Affiliates.AffiliatesView = Marionette.ItemView.extend({\r\n            template: tpl_affiliates,\r\n            tagName: 'div',\r\n            className: '',\r\n            events: {\r\n\r\n            },\r\n            onRender: function () {\r\n                this.$el.find('#affiliates_stream').flexslider({\r\n                    animation: \"slide\",\r\n                    controlNav: false,\r\n                    animationLoop: true,\r\n                    slideshow: true,\r\n                    itemWidth: 150,\r\n                    pauseOnAction: false,\r\n                    pauseOnHover: false,\r\n                    pausePlay: false,\r\n                    slideshowSpeed: 6000\r\n                });\r\n            }\r\n        });\r\n\r\n        Affiliates.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show');\r\n                this.AffiliatesRegion = options.AffiliatesRegion;\r\n            },\r\n\r\n            show: function () {\r\n                var view = new Affiliates.AffiliatesView({\r\n                });\r\n                this.AffiliatesRegion.show(view);\r\n            }\r\n        });\r\n\r\n        Affiliates.addInitializer(function () {\r\n            Affiliates.controller = new Affiliates.Controller({\r\n                AffiliatesRegion: App.regionManager.get('Affiliates')\r\n            });\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"HomeSlides\", function (HomeSlides, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        HomeSlides.on('start', function () {\r\n\r\n        });\r\n\r\n        HomeSlides.HomeSlidesView = Marionette.ItemView.extend({\r\n            template: tpl_home_slides,\r\n            tagName: 'div',\r\n            className: '',\r\n            events: {\r\n\r\n            },\r\n            onRender: function () {\r\n\r\n            }\r\n        });\r\n\r\n        HomeSlides.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show');\r\n                this.HomeSlidesRegion = options.HomeSlidesRegion;\r\n            },\r\n\r\n            show: function () {\r\n                var view = new HomeSlides.HomeSlidesView({\r\n                });\r\n                this.HomeSlidesRegion.show(view);\r\n            }\r\n        });\r\n\r\n        HomeSlides.addInitializer(function (args) {\r\n            HomeSlides.controller = new HomeSlides.Controller({\r\n                HomeSlidesRegion: args.HomeSlidesRegion\r\n            });\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"RegionSelector\", function (RegionSelector, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        RegionSelector.SelectRegionView = Marionette.ItemView.extend({\r\n            template: tpl_region_selector,\r\n            tagName: 'span',\r\n            className: 'dsk-regionPicker',\r\n            events: {\r\n                'change #dsk_select_region': 'regionChanged'\r\n            },\r\n            onRender: function () {\r\n                this.$el.find('#dsk_select_region').val(App.SelectedRegionId.get());\r\n            },\r\n            regionChanged: function (e) {\r\n                e.preventDefault();\r\n                var selectedRegionId = parseInt($(e.currentTarget).val(), 10);\r\n                // trigger view event\r\n                this.trigger('region:changed', selectedRegionId);\r\n            }\r\n        });\r\n\r\n        RegionSelector.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show', 'regionChanged');\r\n                this.RegionSelectorRegion = options.RegionSelectorRegion;\r\n            },\r\n\r\n            show: function () {\r\n                var that = this,\r\n                    repo = new App.Deals.Repository();\r\n\r\n                var promise = repo.getRegions();\r\n                promise.done(function (regions) {\r\n                    var view = new RegionSelector.SelectRegionView({\r\n                        collection: regions\r\n                    });\r\n\r\n                    // add listener for view event\r\n                    that.listenTo(view, 'region:changed', that.regionChanged);\r\n\r\n                    that.RegionSelectorRegion.show(view);\r\n                });\r\n            },\r\n\r\n            /*** event handler ***/\r\n            regionChanged: function (selectedRegionId) {\r\n                //this.trigger('region:changed', selectedRegionId);\r\n                App.SelectedRegionId.set(selectedRegionId);\r\n                window.location.href = '/';\r\n            }\r\n        });\r\n\r\n        RegionSelector.addInitializer(function () {\r\n            RegionSelector.controller = new RegionSelector.Controller({\r\n                RegionSelectorRegion: App.regionManager.get('RegionSelector')\r\n            });\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"TopMenu\", function (TopMenu, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        TopMenu.TopMenuItemView = Marionette.ItemView.extend({\r\n            tagName: 'li',\r\n            template: tpl_top_menu,\r\n            onBeforeRender: function() {\r\n                var subCategories = this.model.get('SubCategories');\r\n                if (subCategories && subCategories.length > 0) {\r\n                    this.$el.addClass('dropdown');\r\n                    this.model.set('HasSubCategories', true);\r\n                } else {\r\n                    this.model.set('HasSubCategories', false);\r\n                }\r\n\r\n                var catId = parseInt(this.model.get('CategoryId'), 10);\r\n                this.$el.attr('data-key', catId);\r\n            }\r\n        });\r\n\r\n        TopMenu.TopMenuCollectionView = Marionette.CollectionView.extend({\r\n            tagName: 'ul',\r\n            className: 'nav nav-pills dsk-topMenuInner',\r\n            itemView: TopMenu.TopMenuItemView,\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'setActiveMenuItem');\r\n                this.activeTopMenuKey = options.activeTopMenuKey;\r\n                this.activeTopMenuSubKey = options.activeTopMenuSubKey;\r\n            },\r\n            onRender: function () {\r\n\r\n            },\r\n            onShow: function () {\r\n                this.trigger('topmenuview:shown');\r\n            },\r\n            setActiveMenuItem: function (activeTopMenuKey, activeTopMenuSubKey) {\r\n                this.$el.find('.active').removeClass('active');\r\n                if (activeTopMenuKey) {\r\n                    this.$el.find('[data-key=\"' + activeTopMenuKey + '\"]').addClass('active');\r\n                }\r\n            }\r\n        });\r\n\r\n        /******* top menu for mobile *******/\r\n        TopMenu.TopMenuMobileItemView = Marionette.ItemView.extend({\r\n            tagName: 'li',\r\n            template: tpl_top_menu_mobile,\r\n            onBeforeRender: function() {\r\n                var subCategories = this.model.get('SubCategories');\r\n                if (subCategories && subCategories.length > 0) {\r\n                    this.$el.addClass('dropdown');\r\n                    this.model.set('HasSubCategories', true);\r\n                } else {\r\n                    this.model.set('HasSubCategories', false);\r\n                }\r\n\r\n                var catId = parseInt(this.model.get('CategoryId'), 10);\r\n                this.$el.attr('data-key', catId);\r\n            }\r\n        });\r\n\r\n        TopMenu.TopMenuMobileCollectionView = Marionette.CollectionView.extend({\r\n            tagName: 'ul',\r\n            className: 'nav nav-pills dsk-topMenuInnerMobile',\r\n            itemView: TopMenu.TopMenuMobileItemView,\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'setActiveMenuItem');\r\n                this.activeTopMenuKey = options.activeTopMenuKey;\r\n                this.activeTopMenuSubKey = options.activeTopMenuSubKey;\r\n            },\r\n            onRender: function () {\r\n\r\n            },\r\n            onShow: function () {\r\n                this.trigger('topmenumobileview:shown');\r\n            },\r\n            setActiveMenuItem: function (activeTopMenuKey, activeTopMenuSubKey) {\r\n                this.$el.find('.active').removeClass('active');\r\n                var key = 0;\r\n                if (activeTopMenuSubKey) {\r\n                    key = activeTopMenuSubKey;\r\n                } else if (activeTopMenuKey) {\r\n                    key = activeTopMenuKey;\r\n                }\r\n                if (key) {\r\n                    this.$el.find('[data-key=\"' + key + '\"]').addClass('active');\r\n                }\r\n            }\r\n        });\r\n\r\n        TopMenu.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show', 'setActiveMenuItem');\r\n                this.TopMenuRegion = options.TopMenuRegion;\r\n                this.TopMenuRegionMobile = options.TopMenuRegionMobile;\r\n                this.TopMenuView = undefined;\r\n                this.TopMenuMobileView = undefined;\r\n                this.CategoryId = options.CategoryId;\r\n                this.SubCategoryId = options.SubCategoryId;\r\n            },\r\n\r\n            show: function () {\r\n                var that = this;\r\n                var repo = new App.Deals.Repository();\r\n                // fetch data\r\n                var promise = repo.getDealCategories();\r\n                promise.done(function (categories) {\r\n                    /*** in order ***/\r\n                    var view = new TopMenu.TopMenuCollectionView({\r\n                        collection: categories\r\n                    });\r\n                    that.listenTo(view, 'topmenuview:shown', function () {\r\n                        that.setActiveMenuItem(that.CategoryId, that.SubCategoryId);\r\n                    });\r\n                    that.TopMenuView = view;\r\n                    that.TopMenuRegion.show(view);\r\n\r\n                    var mobileView = new TopMenu.TopMenuMobileCollectionView({\r\n                        collection: categories\r\n                    });\r\n                    that.listenTo(mobileView, 'topmenumobileview:shown', function () {\r\n                        that.setActiveMenuItem(that.CategoryId, that.SubCategoryId);\r\n                    });\r\n                    that.TopMenuMobileView = mobileView;\r\n                    that.TopMenuRegionMobile.show(mobileView);\r\n                    /*** end in order ***/\r\n                });\r\n                promise.fail(function () {\r\n                });\r\n                promise.always(function () {\r\n                });\r\n            },\r\n\r\n            setActiveMenuItem: function (activeTopMenuKey, activeTopMenuSubKey) {\r\n                if (typeof this.TopMenuView !== 'undefined') {\r\n                    this.TopMenuView.setActiveMenuItem(activeTopMenuKey, activeTopMenuSubKey);\r\n                }\r\n                if (typeof this.TopMenuMobileView !== 'undefined') {\r\n                    this.TopMenuMobileView.setActiveMenuItem(activeTopMenuKey, activeTopMenuSubKey);\r\n                }\r\n            }\r\n        });\r\n\r\n        TopMenu.addInitializer(function (args) {\r\n            var defs = {\r\n                CategoryId: '',\r\n                SubCategoryId: 0\r\n            };\r\n            var args2 = $.extend({}, defs, args);\r\n            TopMenu.controller = new TopMenu.Controller({\r\n                TopMenuRegion: App.regionManager.get('TopMenuInner'),\r\n                TopMenuRegionMobile: App.regionManager.get('TopMenuInnerMobile'),\r\n                CategoryId: args2.CategoryId,\r\n                SubCategoryId: args2.SubCategoryId\r\n            });\r\n        });\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Deals\", function (Deals, App, Backbone, Marionette, $, _) {\r\n\r\n        Deals.DealModel = Backbone.Model.extend({\r\n            initialize: function () {\r\n            },\r\n            url: diskupon.requestUrl('deals'),\r\n            getDeal: function (params) {\r\n                this.fetch({ data: $.param(params) });\r\n            }\r\n        });\r\n\r\n        Deals.DealCollection = Backbone.Collection.extend({\r\n            model: Deals.DealModel,\r\n            url: diskupon.requestUrl('deals'),\r\n            search: function (searchParam) {\r\n                this.fetch({ reset: true, data: $.param(searchParam) });\r\n            }\r\n        });\r\n\r\n        Deals.DealCategoryModel = Backbone.Model.extend({\r\n            initialize: function () {\r\n            }\r\n        });\r\n\r\n        Deals.DealCategoryCollection = Backbone.Collection.extend({\r\n            model: Deals.DealCategoryModel,\r\n            url: diskupon.requestUrl('dealcategories')\r\n        });\r\n\r\n        Deals.RegionModel = Backbone.Model.extend({\r\n            initialize: function () {\r\n            }\r\n        });\r\n\r\n        Deals.RegionCollection = Backbone.Collection.extend({\r\n            model: Deals.RegionModel,\r\n            url: diskupon.requestUrl('regions')\r\n        });\r\n\r\n        Deals.Repository = Marionette.Controller.extend({\r\n            initialize: function () {\r\n                _.bindAll(this, 'search');\r\n\r\n                this.defaultSearchParams = {\r\n                    RegionId: 1, // jakarta\r\n                    CategoryId: 1, // all kupons\r\n                    PageSize: 65000, // num of records per page\r\n                    PageNumber: 1, // 1-based\r\n                    SearchQuery: ''\r\n                };\r\n            },\r\n\r\n            search: function (options) {\r\n                var searchParam = $.extend({}, this.defaultSearchParams, options),\r\n                    deferred = $.Deferred(),\r\n                    dealCollection = new Deals.DealCollection();\r\n\r\n                dealCollection.on('reset', function (deals) {\r\n                    deferred.resolve(deals);\r\n                });\r\n\r\n                dealCollection.search(searchParam);\r\n\r\n                return deferred.promise();\r\n            },\r\n\r\n            getOne: function (id) {\r\n                var dealModel = new Deals.DealModel(),\r\n                    deferred = $.Deferred();\r\n\r\n                dealModel.on('change', function (deal) {\r\n                    deferred.resolve(deal);\r\n                });\r\n\r\n                dealModel.getDeal({ DealId: id });\r\n\r\n                return deferred.promise();\r\n            },\r\n\r\n            getDealCategories: function () {\r\n                var deferred = $.Deferred(),\r\n                    categoryCollection = new Deals.DealCategoryCollection();\r\n\r\n                categoryCollection.on('reset', function (categories) {\r\n                    deferred.resolve(categories);\r\n                });\r\n\r\n                categoryCollection.fetch({ reset: true });\r\n\r\n                return deferred.promise();\r\n            },\r\n\r\n            getRegions: function () {\r\n                var deferred = $.Deferred(),\r\n                    regionCollection = new Deals.RegionCollection();\r\n\r\n                regionCollection.on('reset', function (regions) {\r\n                    deferred.resolve(regions);\r\n                });\r\n\r\n                regionCollection.fetch({ reset: true });\r\n\r\n                return deferred.promise();\r\n            }\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n\r\n    diskupon.App.module(\"Deals.Details\", function (DealsDetails, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        DealsDetails.on('start', function () {\r\n\r\n        });\r\n\r\n        /*** TODO: since this is too big, separate into regions and sub views for modularity ***/\r\n        DealsDetails.DealsDetailsView = Marionette.ItemView.extend({\r\n            template: tpl_deal_details,\r\n            tagName: 'div',\r\n            className: 'dsk-dealDetails',\r\n            events: {\r\n                'click #buyThis': 'buyThisClicked'\r\n            },\r\n            buyThisClicked: function (e) {\r\n                e.preventDefault();\r\n                this.trigger('dealdetails:buy');\r\n            },\r\n            onRender: function () {\r\n            },\r\n            setupSlideShow: function () {\r\n                // slider for deal images\r\n                this.$el.find('#deal_images_navs').flexslider({\r\n                    animation: \"slide\",\r\n                    controlNav: false,\r\n                    animationLoop: false,\r\n                    slideshow: false,\r\n                    itemWidth: 100,\r\n                    asNavFor: '#deal_images'\r\n                });\r\n\r\n                this.$el.find('#deal_images').flexslider({\r\n                    animation: \"slide\",\r\n                    controlNav: false,\r\n                    animationLoop: false,\r\n                    slideshow: false,\r\n                    sync: \"#deal_images_navs\"\r\n                });\r\n                // end slider\r\n\r\n                // image to occupy 100% container\r\n                this.$el.find('.sliderMain-imgContainer').imgLiquid();\r\n            },\r\n            setupMap: function () {\r\n                var that = this;\r\n                // google maps for location\r\n                if (typeof Maplace !== 'undefined') {\r\n                    var mapOptions = {\r\n                        disableDefaultUI: true,\r\n                        // zoom: 10,\r\n                        // center: latlng\r\n                    };\r\n                    var jlocations = this.model.toJSON().Locations;\r\n                    var locs = _.map(jlocations, function (item) {\r\n                        var ct = '<strong>' + item.LocationName + '</strong>' +\r\n                                 '<p>' + item.LocationAddress + '</p>' +\r\n                                 '<i>&nbsp;</i>';\r\n                        return {\r\n                            zoom: 12,\r\n                            lat: item.Latitude,\r\n                            lon: item.Longitude,\r\n                            title: ct,\r\n                            html: ct,\r\n                            // icon: 'http://maps.google.com/mapfiles/markerA.png'\r\n                        };\r\n                    });\r\n                    new Maplace({\r\n                        locations: locs,\r\n                        map_div: '#map_canvas',\r\n                        controls_div: '#map_controls',\r\n                        controls_type: 'list',\r\n                        controls_on_map: false,\r\n                        controls_position: google.maps.ControlPosition.BOTTOM_LEFT,\r\n                        view_all: false,\r\n                        start: 5,\r\n                        map_options: mapOptions,\r\n                        afterShow: function (index, location, marker) {\r\n                            that.trigger('dealdetails:mapshown');\r\n                        }\r\n                    }).Load();\r\n                }\r\n            },\r\n            loadMap: function () {\r\n                var dis = this;\r\n                yepnope({\r\n                    test: window.google,\r\n                    yep: ['/libs/maplace.min.js'],\r\n                    complete: function () {\r\n                        dis.setupMap();\r\n                    }\r\n                });\r\n                if (typeof window.google === 'undefined') {\r\n                    this.trigger('dealdetails:mapshown');\r\n                }\r\n            },\r\n            setupMasonry: function () {\r\n                // masonry for deal details sections\r\n                var container = this.$el.find('.dsk-dd-detailsContainer').get(0);\r\n                var msnry = new Masonry(container, {\r\n                    itemSelector: '.dsk-dd-details'\r\n                });\r\n                // don't comment this, used in window.load\r\n                window.msnry = msnry;\r\n                diskupon.GlobalEvents.tickRelayoutMasonry();\r\n            },\r\n            setupPopover: function () {\r\n                var dis = this;\r\n                var elem = tpl_kupon_selector(this.model.toJSON());\r\n                this.$el.find(\"#buyThis\").popover({\r\n                    title: 'Choose your Kupon:<button type=\"button\" id=\"close\" class=\"close\" onclick=\"$(&quot;#buyThis&quot;).popover(&quot;hide&quot;);\">&times;</button>',\r\n                    content: elem,\r\n                    html: true,\r\n                    placement: 'bottom',\r\n                    trigger: 'manual'\r\n                });\r\n                this.$el.find(\"#buyThis\").on('shown.bs.popover', function () {\r\n                    dis.$el.find('.chooser').iCheck({\r\n                        checkboxClass: 'icheckbox_flat-green',\r\n                        radioClass: 'iradio_flat-green',\r\n                        increaseArea: '20%'\r\n                    });\r\n                    dis.$el.find('#dsk_kselectorBuy').prop('disabled', false);\r\n                });\r\n            },\r\n            setupPopoverEvents: function () {\r\n                var dis = this;\r\n                this.$el.find('.dsk-dd-buy').on('click', '#dsk_kselectorBuy', function (e) {\r\n                    e.preventDefault();\r\n                    var checkedElem = dis.$el.find('input[name=\"selected_kupon\"]:checked');\r\n                    if (checkedElem.length <= 0) {\r\n                        return false;\r\n                    } else {\r\n                        var selectedKupons = [];\r\n                        $.each(checkedElem, function(idx, item) {\r\n                            var kid = $(item).val();\r\n                            var qty = $(item).closest('.list-group-item').find('input[type=\"text\"].kpQty').val();\r\n                            selectedKupons.push({\r\n                                KuponId: kid,\r\n                                Qty: qty\r\n                            });\r\n                        });\r\n                        dis.trigger('dealdetails:selectkuponandbuy', { SelectedKupons: selectedKupons, Deal: dis.model.toJSON() });\r\n                    }\r\n                });\r\n                this.$el.find('.dsk-dd-buy').on('click', '#dsk_kselectorCancel', function (e) {\r\n                    e.preventDefault();\r\n                    dis.$el.find(\"#buyThis\").popover('hide');\r\n                });\r\n                this.$el.find('.dsk-dd-buy').on('click', '#ks_gotocart', function (e) {\r\n                    e.preventDefault();\r\n                    App.vent.trigger('selectkuponandbuy:gotocart');\r\n                    dis.hideKuponSelector();\r\n                });\r\n                this.$el.find('.dsk-dd-buy').on('click', '.ks-close', function (e) {\r\n                    e.preventDefault();\r\n                    dis.hideKuponSelector();\r\n                });\r\n                this.$el.find('.dsk-dd-buy').on('blur', '.kpQty', function () {\r\n                    var p = parseInt($(this).val(), 10);\r\n                    if(isNaN(p)) {\r\n                        $(this).val(0);\r\n                    }\r\n                });\r\n            },\r\n            blockKuponSelector: function () {\r\n                this.$el.find('.popover-content').block({\r\n                    message: '<h1>adding to cart</h1>',\r\n                    fadeIn: 700\r\n                });\r\n            },\r\n            unblockKuponSelector: function () {\r\n                this.$el.find('.popover-content').unblock({\r\n                    fadeOut: 700\r\n                });\r\n            },\r\n            showKuponSelector: function () {\r\n                this.$el.find(\"#buyThis\").popover('toggle');\r\n            },\r\n            hideKuponSelector: function () {\r\n                this.$el.find(\"#buyThis\").popover('hide');\r\n            },\r\n            onShow: function () {\r\n                this.setupSlideShow();\r\n                this.loadMap();\r\n                this.setupPopover();\r\n                this.setupPopoverEvents();\r\n            }\r\n        });\r\n\r\n        var DealDetailsPageLayout = Backbone.Marionette.Layout.extend({\r\n            template: tpl_deal_details_page, //\"#dealDetailsPageLayout_template\",\r\n            regions: {\r\n                MainContent: '#dsk_content',\r\n            },\r\n            className: 'container'\r\n        });\r\n\r\n        DealsDetails.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'showDealsDetails', 'renderDealsDetails', 'renderDetailsLayout');\r\n                this.Layout = new DealDetailsPageLayout();\r\n                this.DealId = 0;\r\n            },\r\n\r\n            renderDetailsLayout: function () {\r\n                this.Layout.render();\r\n                App.regionManager.get('Main').show(this.Layout);\r\n            },\r\n\r\n            renderDealsDetails: function (deal) {\r\n                var dis = this;\r\n                var view = new DealsDetails.DealsDetailsView({\r\n                    model: deal\r\n                });\r\n                this.listenTo(view, 'dealdetails:buy', function () {\r\n                    dis.buyThisDealHandler(view);\r\n                });\r\n                this.listenTo(view, 'dealdetails:selectkuponandbuy', function (params) {\r\n                    App.vent.on(\"selectkuponandbuy:success\", function () {\r\n                        setTimeout(function () {\r\n                            var sm = 'item was added to cart<br/><br/>' +\r\n                                     '<button type=\"button\" id=\"ks_gotocart\" class=\"wisteria-flat-button btn-xs\">go to cart&nbsp;<i class=\"fa fa-arrow-up\"></i></button>' +\r\n                                     '&nbsp;&nbsp;&nbsp;' +\r\n                                     '<button type=\"button\" class=\"ks-close carrot-flat-button btn-xs\">keep shopping&nbsp;<i class=\"fa fa-times\"></i></button>';\r\n                            view.$el.find('.blockUI.blockMsg h1').html(sm);\r\n                            // var em = 'item(s) was not added to cart<br/>refresh page<br/>and try again<br/><br/>' +\r\n                            //          '<button type=\"button\" class=\"ks-close carrot-flat-button btn-xs\">keep shopping&nbsp;<i class=\"fa fa-times\"></i></button>';\r\n                            view.$el.find('.blockUI.blockMsg h1').html(em);\r\n                        }, 1000);\r\n                    });\r\n                    App.vent.on(\"selectkuponandbuy:failed\", function () {\r\n                        setTimeout(function () {\r\n                            var em = 'item(s) was not added to cart<br/>refresh page<br/>and try again<br/><br/>' +\r\n                                     '<button type=\"button\" class=\"ks-close carrot-flat-button btn-xs\">keep shopping&nbsp;<i class=\"fa fa-times\"></i></button>';\r\n                            view.$el.find('.blockUI.blockMsg h1').html(em);\r\n                        }, 1000);\r\n                    });\r\n                    view.blockKuponSelector();\r\n                    App.commands.execute('addkupontocart', params);\r\n                });\r\n                this.listenTo(view, 'dealdetails:mapshown', function () {\r\n                    view.setupMasonry();\r\n                });\r\n                this.Layout.MainContent.show(view);\r\n\r\n                // set active menu\r\n                var dealModel = deal.toJSON();\r\n                App.TopMenu.controller.setActiveMenuItem(diskupon.DealCategory.ByCategory, dealModel.DealCategoryId);\r\n            },\r\n\r\n            showDealsDetails: function () {\r\n                var that = this;\r\n                var repo = new App.Deals.Repository();\r\n                var promise = repo.getOne(this.DealId);\r\n                promise.done(function (deal) {\r\n                    that.renderDetailsLayout();\r\n                    that.renderDealsDetails(deal);\r\n                });\r\n            },\r\n\r\n            buyThisDealHandler: function (view) {\r\n                var jmodel = view.model.toJSON();\r\n                view.showKuponSelector();\r\n            }\r\n        });\r\n\r\n        DealsDetails.addInitializer(function (args) {\r\n            DealsDetails.controller = new DealsDetails.Controller({\r\n            });\r\n        });\r\n\r\n        DealsDetails.addFinalizer(function () {\r\n            DealsDetails.controller.close();\r\n            delete DealsDetails.controller;\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Deals.List\", function (DealsList, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        DealsList.on('start', function () {\r\n        });\r\n\r\n        DealsList.DealsListItemView = Marionette.ItemView.extend({\r\n            template: tpl_deals_item,\r\n            tagName: 'div',\r\n            className: 'dsk-dealContainer pull-left'\r\n        });\r\n\r\n        DealsList.DealsListCollectionView = Marionette.CollectionView.extend({\r\n            tagName: 'div',\r\n            className: 'dsk-listOfDeals clearfix',\r\n            itemView: DealsList.DealsListItemView,\r\n            onRender: function () {\r\n                this.$el.find('.dsk-di-cover').lazyload({\r\n                    //effect: 'fadeIn'\r\n                });\r\n                this.$el.find('.dsk-dealItem').hover(function () {\r\n                    $(this).addClass('hover');\r\n                }, function () {\r\n                    $(this).removeClass('hover');\r\n                });\r\n            }\r\n        });\r\n\r\n        /**** mobile version view ****/\r\n        DealsList.DealsListMobileItemView = Marionette.ItemView.extend({\r\n            template: tpl_deals_item_mobile,\r\n            tagName: 'div',\r\n            className: 'dsk-dealContainer-mobile clearfix'\r\n        });\r\n\r\n        DealsList.DealsListMobileCollectionView = Marionette.CollectionView.extend({\r\n            tagName: 'div',\r\n            className: 'dsk-listOfDeals-mobile clearfix',\r\n            itemView: DealsList.DealsListMobileItemView,\r\n            onRender: function () {\r\n                this.$el.find('.dsk-di-cover-mobile').lazyload({\r\n                    //effect: 'fadeIn'\r\n                });\r\n            }\r\n        });\r\n\r\n        var DealListPageLayout = Backbone.Marionette.Layout.extend({\r\n            template: tpl_deals_list_page, //\"#dealListPageLayout_template\",\r\n            regions: {\r\n                HomeSlides: '#dsk_homeSlides',\r\n                MainContent: '#dsk_content',\r\n                MainContentMobile: '#dsk_content_mobile'\r\n            },\r\n            className: 'container'\r\n        });\r\n\r\n        DealsList.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'showDeals', 'renderDeals');\r\n                this.SearchParams = {\r\n                    RegionId: 1, // jakarta\r\n                    CategoryId: diskupon.DealCategory.All, // all kupons\r\n                    PageNumber: 1, // 1-based\r\n                    SearchQuery: ''\r\n                };\r\n                this.Layout = new DealListPageLayout();\r\n            },\r\n\r\n            renderListLayout: function () {\r\n                this.Layout.render();\r\n                App.regionManager.get('Main').show(this.Layout);\r\n            },\r\n\r\n            renderHomeSlides: function () {\r\n                App.module(\"HomeSlides\").start({ HomeSlidesRegion: this.Layout.HomeSlides });\r\n                App.HomeSlides.controller.show();\r\n                App.module(\"HomeSlides\").stop();\r\n            },\r\n\r\n            renderDeals: function (deals) {\r\n                if ($(this.Layout.MainContent.el).is(':visible')) {\r\n                    var colView = new DealsList.DealsListCollectionView({\r\n                        collection: deals\r\n                    });\r\n                    this.Layout.MainContent.show(colView);\r\n                    this.trigger('dealslist:listshown');\r\n                }\r\n\r\n                if ($(this.Layout.MainContentMobile.el).is(':visible')) {\r\n                    var mobileColView = new DealsList.DealsListMobileCollectionView({\r\n                        collection: deals\r\n                    });\r\n                    this.Layout.MainContentMobile.show(mobileColView);\r\n                    this.trigger('dealslist:listmobileshown');\r\n                }\r\n            },\r\n\r\n            showDeals: function () {\r\n                var that = this;\r\n                var repo = new App.Deals.Repository();\r\n\r\n                // fetch data\r\n                this.SearchParams.RegionId = App.SelectedRegionId.get();\r\n\r\n                var promise = repo.search(this.SearchParams);\r\n                promise.done(function (deals) {\r\n                    // render the data\r\n                    that.renderListLayout();\r\n                    that.renderHomeSlides();\r\n                    that.renderDeals(deals);\r\n                });\r\n            }\r\n        });\r\n\r\n        DealsList.addInitializer(function (args) {\r\n            DealsList.controller = new DealsList.Controller({\r\n            });\r\n\r\n            DealsList.controller.on('dealslist:listshown', function () {\r\n                $(window).trigger('scroll');\r\n            });\r\n\r\n            DealsList.controller.on('dealslist:listmobileshown', function () {\r\n                $(window).trigger('scroll');\r\n            });\r\n        });\r\n\r\n        DealsList.addFinalizer(function () {\r\n            DealsList.controller.close();\r\n            delete DealsList.controller;\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Deals\", function (Deals, App, Backbone, Marionette, $, _) {\r\n\r\n        Deals.on('start', function () {\r\n\r\n        });\r\n\r\n        Deals.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'showDealsList', 'showDealDetails');\r\n            },\r\n\r\n            stopSubmodule: function () {\r\n                App.module('Deals.List').stop();\r\n                App.module('Deals.Details').stop();\r\n                App.module('Deals.TopDeals').stop();\r\n            },\r\n\r\n            startListSubmodule: function () {\r\n                this.stopSubmodule();\r\n\r\n                App.module('Deals.List').start();\r\n            },\r\n\r\n            startDetailsModule: function () {\r\n                this.stopSubmodule();\r\n\r\n                App.module('Deals.Details').start();\r\n            },\r\n\r\n            startTopDealsModule: function () {\r\n                this.stopSubmodule();\r\n\r\n                App.module('Deals.TopDeals').start();\r\n            },\r\n\r\n            showDealsList: function (options) {\r\n                this.startListSubmodule();\r\n\r\n                var defaultOptions = {\r\n                    categoryId: diskupon.DealCategory.All,\r\n                    searchQuery: ''\r\n                };\r\n                options = $.extend({}, defaultOptions, options);\r\n\r\n                Deals.List.controller.SearchParams.CategoryId = options.categoryId;\r\n                Deals.List.controller.SearchParams.SearchQuery = options.searchQuery;\r\n                Deals.List.controller.showDeals();\r\n            },\r\n\r\n            showDealDetails: function (dealId) {\r\n                this.startDetailsModule();\r\n\r\n                Deals.Details.controller.DealId = dealId;\r\n                Deals.Details.controller.showDealsDetails();\r\n            },\r\n\r\n            showTopDealsGroupByCategory: function () {\r\n                this.startTopDealsModule();\r\n\r\n                Deals.TopDeals.controller.showTopDeals();\r\n            }\r\n        });\r\n\r\n        Deals.addInitializer(function () {\r\n            Deals.controller = new Deals.Controller({\r\n            });\r\n        });\r\n\r\n        Deals.addFinalizer(function () {\r\n            Deals.controller.close();\r\n            delete Deals.controller;\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Deals.TopDeals\", function (TopDeals, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        var TopDealsPageLayout = Backbone.Marionette.Layout.extend({\r\n            template: tpl_top_deals_page,\r\n            regions: {\r\n                HomeSlides: '#dsk_homeSlides',\r\n                MainContent: '#dsk_content',\r\n                MainContentMobile: '#dsk_content_mobile'\r\n            },\r\n            className: 'container'\r\n        });\r\n\r\n\r\n        TopDeals.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                //_.bindAll(this, 'showDeals', 'renderDeals');\r\n\r\n                this.Layout = new TopDealsPageLayout();\r\n            },\r\n\r\n            renderTopDealsLayout: function () {\r\n                this.Layout.render();\r\n                App.regionManager.get('Main').show(this.Layout);\r\n            },\r\n\r\n            renderHomeSlides: function () {\r\n                App.module(\"HomeSlides\").start({ HomeSlidesRegion: this.Layout.HomeSlides });\r\n                App.HomeSlides.controller.show();\r\n                App.module(\"HomeSlides\").stop();\r\n            },\r\n\r\n            showTopDeals: function () {\r\n                this.renderTopDealsLayout();\r\n                this.renderHomeSlides();\r\n            }\r\n        });\r\n\r\n        TopDeals.addInitializer(function (args) {\r\n            TopDeals.controller = new TopDeals.Controller({\r\n            });\r\n\r\n        });\r\n\r\n        TopDeals.addFinalizer(function () {\r\n            TopDeals.controller.close();\r\n            delete TopDeals.controller;\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.GlobalEvents = {\r\n        tickRelayoutMasonry: function () {\r\n            if (typeof window.msnry !== 'undefined') {\r\n                window.msnry.layout();\r\n                var times = 0;\r\n                var msnryTimeout = window.setInterval(function () {\r\n                    //console.log('masonry relayout');\r\n                    window.msnry.layout();\r\n                    times++;\r\n                    if (times > 30) {\r\n                        window.clearInterval(msnryTimeout);\r\n                    }\r\n                }, 300);\r\n            }\r\n        }\r\n    };\r\n} (window.Diskupon));","/**************************/\r\n/*\r\n/* move these methods below to another library\r\n/*\r\n/***************************/\r\n\r\n/*** backbone force use POST when fetching ***/\r\n// Backbone.ajax = function () {\r\n//     var args = Array.prototype.slice.call(arguments);\r\n//     if (args[0]) {\r\n//         args[0].type = 'POST';\r\n//     }\r\n//     return Backbone.$.ajax.apply(Backbone.$, args);\r\n// };\r\n\r\n// /*** override native console ***/\r\n// (function(){\r\n//     var nativeConsoleLog = console.log;\r\n//     console.log = function (message) {\r\n//         // DO MESSAGE HERE.\r\n//         //nativeConsoleLog.apply(console, arguments);\r\n//         return false;\r\n//     };\r\n// })();\r\n\r\n(function ($) {\r\n    if (NProgress) {\r\n        //NProgress.configure({ ease: 'ease', speed: 500 });\r\n        //NProgress.configure({ trickle: false });\r\n        //NProgress.configure({ trickleRate: 0.02, trickleSpeed: 100 });\r\n    }\r\n\r\n    $(document).ajaxStart(function () {\r\n        if (NProgress) {\r\n            NProgress.start();\r\n        }\r\n    });\r\n    $(document).ajaxStop(function () {\r\n        if (NProgress) {\r\n            NProgress.done(true);\r\n        }\r\n    });\r\n}(jQuery));\r\n\r\nwindow.onerror = function (message, url, lineNumber) {\r\n    console.log(message);\r\n    if (NProgress) {\r\n        NProgress.done(true);\r\n    }\r\n};","function encode (value) {\r\n    var unencoded = value;\r\n    var encoded = encodeURIComponent(unencoded).replace(/'/g,\"%27\").replace(/\"/g,\"%22\");\r\n    return encoded;\r\n}\r\n\r\nfunction decode(value) {\r\n    var encoded = value;\r\n    var decoded = decodeURIComponent(encoded.replace(/\\+/g, \" \"));\r\n    return decoded;\r\n}\r\n\r\n/*** make push state for backbone, intercept anchor click ***/\r\nfunction prepareBackbonePushState () {\r\n    // Use absolute URLs  to navigate to anything not in your Router.\r\n    // Only need this for pushState enabled browsers\r\n    if (Backbone.history && Backbone.history._hasPushState) {\r\n        // Use delegation to avoid initial DOM selection and allow all matching elements to bubble\r\n        $(document).delegate(\"a[href^='/']\", \"click\", function (evt) {\r\n            //console.log('hijacked!!!');\r\n            // Get the anchor href and protcol\r\n            var href = $(this).attr(\"href\");\r\n            var protocol = this.protocol + \"//\";\r\n            // Ensure the protocol is not part of URL, meaning its relative.\r\n            // Stop the event bubbling to ensure the link will not cause a page refresh.\r\n            if (href.slice(protocol.length) !== protocol) {\r\n                evt.preventDefault();\r\n                // Note by using Backbone.history.navigate, router events will not be\r\n                // triggered.  If this is a problem, change this to navigate on your\r\n                // router.\r\n                Backbone.history.navigate(href, true);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// function randomString (length) {\r\n//     var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n//     var result = '';\r\n//     for (var i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n//     return result;\r\n// }\r\n"]}
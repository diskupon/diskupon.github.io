{"version":3,"file":"public\\javascripts\\app.js","sources":["app/scripts/00.app.js","app/scripts/01.application-router.js","app/scripts/deals/deals-data.js","app/scripts/deals/deals-details.js","app/scripts/deals/deals-list.js","app/scripts/deals/deals.js","app/scripts/hacks.js","app/scripts/region-selector.js","app/scripts/top-menu.js"],"names":[],"mappingspjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CCnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A,CCrsourcesContent":["/********************************/\r\n/*\r\n/* Diskupon Starts Here\r\n/*\r\n/********************************/\r\nwindow.Diskupon = {\r\n    DealCategory: {\r\n        All: -11,\r\n        New: -22,\r\n        Hot: -33,\r\n        EndingSoon: -44,\r\n        ByCategory: -55,\r\n        Honeymoon: -66\r\n    },\r\n    API_HOST: 'diskupon.apphb.com', //'diskupon.apphb.com',\r\n    requestUrl: function (slug) {\r\n        if (slug.substring(0, 1) === '/') {\r\n            return '//' + this.API_HOST + slug;\r\n        } else {\r\n            return '//' + this.API_HOST + '/api/' + slug;\r\n        }\r\n    }\r\n};\r\n\r\n(function (diskupon) {\r\n    diskupon.App = new Marionette.Application();\r\n    var App = diskupon.App;\r\n\r\n    App.regionManager = new Marionette.RegionManager();\r\n    App.regionManager.addRegions({\r\n        Header: '#dsk_header',\r\n        RegionSelector: '#dsk_pick_region',\r\n        TopMenu: '#dsk_topMenu',\r\n        TopMenuInner: '#dsk_topMenu_Inner',\r\n        TopMenuInnerMobile: '#dsk_topMenu_Inner_Mobile',\r\n        Main: '#dsk_main',\r\n        Footer: '#dsk_footer'\r\n    });\r\n\r\n    App.on('start', function () {\r\n        if (Backbone.history){\r\n            Backbone.history.start({ pushState: true });\r\n            others.prepareBackbonePushState();\r\n        }\r\n    });\r\n\r\n    App.HomePageLayout = Backbone.Marionette.Layout.extend({\r\n        template: \"#homePageLayout_template\",\r\n        regions: {\r\n            HomeSlides: '#dsk_homeSlides',\r\n            MainContent: '#dsk_content',\r\n            MainContentMobile: '#dsk_content_mobile'\r\n        },\r\n        className: 'container'\r\n    });\r\n\r\n    App.DetailsPageLayout = Backbone.Marionette.Layout.extend({\r\n        template: \"#detailsPageLayout1_template\",\r\n        regions: {\r\n            MainContent: '#dsk_content',\r\n            MainContentMobile: '#dsk_content_mobile'\r\n        },\r\n        className: 'container'\r\n    });\r\n\r\n    App.vent.on('submodule:start', function (submodulesNames, submoduleName, options) {\r\n        //console.log('ON:submodule:start NAME >> ' + submoduleName);\r\n        for (var i = 0; i < submodulesNames.length; i++) {\r\n            var _submoduleName = submodulesNames[i];\r\n            if (_submoduleName !== submoduleName) {\r\n                //console.log('ON:submodule:start STOPPING >> ' + _submoduleName);\r\n                App.module(_submoduleName).stop();\r\n            } else {\r\n                //console.log('ON:submodule:start STARTING >> ' + _submoduleName);\r\n                App.module(_submoduleName).start(options);\r\n            }\r\n        }\r\n    });\r\n\r\n    App.SelectedRegionId = {\r\n        get: function () {\r\n            var ls = localStorage.getItem('ds_regionid');\r\n            if (ls === null) {\r\n                ls = '2'; // change this with jakarta id\r\n            }\r\n            var selectedRegionId = parseInt(ls, 10);\r\n            return selectedRegionId;\r\n        },\r\n        set: function (value) {\r\n            localStorage.setItem('ds_regionid', value.toString());\r\n        }\r\n    };\r\n\r\n} (window.Diskupon));","(function (diskupon, App) {\r\n\r\n    var appRouterController = {\r\n        showOthers: function (activeTopMenuKey, activeTopMenuSubKey) {\r\n            //console.log(activeTopMenuKey);\r\n            App.RegionSelector.controller.show();\r\n            App.TopMenu.controller.listenTo(App.TopMenu.controller, 'topmenu:shown', function () {\r\n                App.TopMenu.controller.trigger('topmenu:changeactivemenuitem', activeTopMenuKey, activeTopMenuSubKey);\r\n            });\r\n            App.TopMenu.controller.show();\r\n        },\r\n        showHomePage: function () {\r\n            this.showOthers(diskupon.DealCategory.All);\r\n            App.Deals.controller.showDealsList(diskupon.DealCategory.All);\r\n        },\r\n        showAllKuponsPage: function () {\r\n            this.showOthers(diskupon.DealCategory.All);\r\n            App.Deals.controller.showDealsList(diskupon.DealCategory.All);\r\n        },\r\n        showNewKuponsPage: function () {\r\n            this.showOthers(diskupon.DealCategory.New);\r\n            App.Deals.controller.showDealsList(diskupon.DealCategory.New);\r\n        },\r\n        showEndingSoonKuponsPage: function () {\r\n            this.showOthers(diskupon.DealCategory.EndingSoon);\r\n            App.Deals.controller.showDealsList(diskupon.DealCategory.EndingSoon);\r\n        },\r\n        showHotKuponsPage: function () {\r\n            this.showOthers(diskupon.DealCategory.Hot);\r\n            App.Deals.controller.showDealsList(diskupon.DealCategory.Hot);\r\n        },\r\n        showKuponsByCategory: function (id, name) {\r\n            this.showOthers(diskupon.DealCategory.ByCategory, id);\r\n            App.Deals.controller.showDealsList(diskupon.DealCategory.ByCategory, id);\r\n        },\r\n        showHoneymoon: function () {\r\n            this.showOthers(diskupon.DealCategory.Honeymoon);\r\n        },\r\n        showKuponDetails: function (id, name) {\r\n            this.showOthers();\r\n            App.Deals.controller.showDealDetails(id);\r\n        }\r\n    };\r\n\r\n    diskupon.AppRouter = Backbone.Marionette.AppRouter.extend({});\r\n\r\n    App.addInitializer(function () {\r\n        new diskupon.AppRouter({\r\n            controller: appRouterController,\r\n            appRoutes: {\r\n                \"\": \"showHomePage\",\r\n                \"kupons/all\": \"showAllKuponsPage\",\r\n                \"kupons/new\": \"showNewKuponsPage\",\r\n                \"kupons/endingsoon\": \"showEndingSoonKuponsPage\",\r\n                \"kupons/hot\": \"showHotKuponsPage\",\r\n                \"kupons/:id/:name\": \"showKuponsByCategory\",\r\n                \"kupons/honeymoon\": \"showHoneymoon\",\r\n                \"kupons/details/:id/:name\": \"showKuponDetails\"\r\n            }\r\n        });\r\n    });\r\n\r\n} (window.Diskupon, window.Diskupon.App));","(function (diskupon) {\r\n    diskupon.App.module(\"Deals\", function(Deals, App, Backbone, Marionette, $, _) {\r\n\r\n        Deals.DealModel = Backbone.Model.extend({\r\n            initialize: function () {\r\n            },\r\n            url: diskupon.requestUrl('deals'),\r\n            get: function (params) {\r\n                this.fetch({ data: $.param(params) });\r\n            }\r\n        });\r\n\r\n        Deals.DealCollection = Backbone.Collection.extend({\r\n            model: Deals.DealModel,\r\n            url: diskupon.requestUrl('deals'),\r\n            search: function (searchParam) {\r\n                this.fetch({ reset: true, data: $.param(searchParam) });\r\n            }\r\n        });\r\n\r\n        Deals.DealCategoryModel = Backbone.Model.extend({\r\n            initialize: function () {\r\n            }\r\n        });\r\n\r\n        Deals.DealCategoryCollection = Backbone.Collection.extend({\r\n            model: Deals.DealCategoryModel,\r\n            url: diskupon.requestUrl('dealcategories')\r\n        });\r\n\r\n        Deals.RegionModel = Backbone.Model.extend({\r\n            initialize: function () {\r\n            }\r\n        });\r\n\r\n        Deals.RegionCollection = Backbone.Collection.extend({\r\n            model: Deals.RegionModel,\r\n            url: diskupon.requestUrl('regions')\r\n        });\r\n\r\n        Deals.Repository = Marionette.Controller.extend({\r\n            initialize: function () {\r\n                _.bindAll(this, 'search');\r\n\r\n                this.defaultSearchParams = {\r\n                    RegionId: 1, // jakarta\r\n                    CategoryId: 1, // all kupons\r\n                    PageSize: 65000, // num of records per page\r\n                    PageNumber: 1 // 1-based\r\n                };\r\n            },\r\n\r\n            search: function (options) {\r\n                var searchParam = $.extend(this.defaultSearchParams, options),\r\n                    deferred = $.Deferred(),\r\n                    dealCollection = new Deals.DealCollection();\r\n\r\n                dealCollection.on('reset', function (deals) {\r\n                    //console.log('dealCollection:reset');\r\n                    //console.log(deals);\r\n                    deferred.resolve(deals);\r\n                });\r\n\r\n                dealCollection.search(searchParam);\r\n\r\n                return deferred.promise();\r\n            },\r\n\r\n            getOne: function (id) {\r\n                var dealModel = new Deals.DealModel(),\r\n                    deferred = $.Deferred();\r\n\r\n                dealModel.on('change', function (deal) {\r\n                    deferred.resolve(deal);\r\n                });\r\n\r\n                dealModel.get({ DealId: id });\r\n\r\n                return deferred.promise();\r\n            },\r\n\r\n            getDealCategories: function () {\r\n                var deferred = $.Deferred(),\r\n                    categoryCollection = new Deals.DealCategoryCollection();\r\n\r\n                categoryCollection.on('reset', function (categories) {\r\n                    deferred.resolve(categories);\r\n                });\r\n\r\n                categoryCollection.fetch({ reset: true });\r\n\r\n                return deferred.promise();\r\n            },\r\n\r\n            getRegions: function () {\r\n                var deferred = $.Deferred(),\r\n                    regionCollection = new Deals.RegionCollection();\r\n\r\n                regionCollection.on('reset', function (regions) {\r\n                    deferred.resolve(regions);\r\n                });\r\n\r\n                regionCollection.fetch({ reset: true });\r\n\r\n                return deferred.promise();\r\n            }\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Deals.Details\", function(DealsDetails, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        DealsDetails.on('start', function () {\r\n\r\n        });\r\n\r\n        DealsDetails.DealsDetailsView = Marionette.ItemView.extend({\r\n            template: tpl_deal_details,\r\n            tagName: 'div',\r\n            className: 'dsk-dealDetails',\r\n            onRender: function () {\r\n                var that = this;\r\n                this.$el.find('#deal_images_navs').flexslider({\r\n                    animation: \"slide\",\r\n                    controlNav: false,\r\n                    animationLoop: false,\r\n                    slideshow: false,\r\n                    itemWidth: 100,\r\n                    asNavFor: '#deal_images'\r\n                });\r\n                this.$el.find('#deal_images').flexslider({\r\n                    animation: \"slide\",\r\n                    controlNav: false,\r\n                    animationLoop: false,\r\n                    slideshow: false,\r\n                    sync: \"#deal_images_navs\"\r\n                });\r\n                this.$el.find('#dsk_dd_tabs a:first').tab('show');\r\n                this.$el.find('.sliderMain-imgContainer').imgLiquid();\r\n            }\r\n        });\r\n\r\n        DealsDetails.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                this.DealsDetailsRegion = options.DealsDetailsRegion;\r\n                this.DealsDetailsMobileRegion = options.DealsDetailsMobileRegion;\r\n                this.DealId = 0;\r\n                _.bindAll(this, 'showDealsDetails', 'renderDealsDetails');\r\n            },\r\n\r\n            renderDealsDetails: function (deal) {\r\n                var view = new DealsDetails.DealsDetailsView({\r\n                    model: deal\r\n                });\r\n                this.DealsDetailsRegion.show(view);\r\n\r\n                this.trigger('dealdetails:detailsshown', deal.toJSON());\r\n\r\n                // TODO: details for mobile region\r\n            },\r\n\r\n            showDealsDetails: function () {\r\n                var that = this;\r\n                var repo = new App.Deals.Repository();\r\n\r\n                var promise = repo.getOne(this.DealId);\r\n\r\n                promise.done(function (deal) {\r\n                    that.renderDealsDetails(deal);\r\n                });\r\n            }\r\n        });\r\n\r\n        DealsDetails.addInitializer(function (args) {\r\n            DealsDetails.controller = new DealsDetails.Controller({\r\n                DealsDetailsRegion: args.DealsDetailsRegion,\r\n                DealsDetailsMobileRegion: args.DealsDetailsMobileRegion\r\n            });\r\n\r\n            DealsDetails.controller.listenTo(DealsDetails.controller, 'dealdetails:detailsshown', function (dealModel) {\r\n                console.log(dealModel.DealCategoryId);\r\n                App.TopMenu.controller.trigger('topmenu:changeactivemenuitem', diskupon.DealCategory.ByCategory, dealModel.DealCategoryId);\r\n            });\r\n        });\r\n\r\n        DealsDetails.addFinalizer(function () {\r\n            DealsDetails.controller.close();\r\n            delete DealsDetails.controller;\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Deals.List\", function(DealsList, App, Backbone, Marionette, $, _) {\r\n\r\n        this.startWithParent = false;\r\n\r\n        DealsList.on('start', function () {\r\n        });\r\n\r\n        DealsList.DealsListItemView = Marionette.ItemView.extend({\r\n            template: tpl_deals_item,\r\n            tagName: 'div',\r\n            className: 'dsk-dealContainer pull-left'\r\n        });\r\n\r\n        DealsList.DealsListCollectionView = Marionette.CollectionView.extend({\r\n            tagName: 'div',\r\n            className: 'dsk-listOfDeals clearfix',\r\n            itemView: DealsList.DealsListItemView,\r\n            onRender: function () {\r\n                this.$el.find('.dsk-di-cover').lazyload({\r\n                    //effect: 'fadeIn'\r\n                });\r\n                this.$el.find('.dsk-dealItem').hover(function () {\r\n                    $(this).addClass('hover');\r\n                }, function () {\r\n                    $(this).removeClass('hover');\r\n                });\r\n            }\r\n        });\r\n\r\n        /**** mobile version view ****/\r\n        DealsList.DealsListMobileItemView = Marionette.ItemView.extend({\r\n            template: tpl_deals_item_mobile,\r\n            tagName: 'div',\r\n            className: 'dsk-dealContainer-mobile media'\r\n        });\r\n\r\n        DealsList.DealsListMobileCollectionView = Marionette.CollectionView.extend({\r\n            tagName: 'div',\r\n            className: 'dsk-listOfDeals-mobile clearfix media-list',\r\n            itemView: DealsList.DealsListMobileItemView,\r\n            onRender: function () {\r\n                this.$el.find('.dsk-di-cover-mobile').lazyload({\r\n                    //effect: 'fadeIn'\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        DealsList.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                //console.log('DealsList.initialize');\r\n                //console.log(options);\r\n                this.DealsListRegion = options.DealsListRegion;\r\n                this.DealsListMobileRegion = options.DealsListMobileRegion;\r\n                this.SearchParams = {\r\n                    RegionId: 1, // jakarta\r\n                    CategoryId: diskupon.DealCategory.All, // all kupons\r\n                    PageNumber: 1 // 1-based\r\n                };\r\n                _.bindAll(this, 'showDeals', 'renderDeals');\r\n            },\r\n\r\n            renderDeals: function (deals) {\r\n                //console.log('DealsList.renderDeals');\r\n                if ($(this.DealsListRegion.el).is(':visible')) {\r\n                    var colView = new DealsList.DealsListCollectionView({\r\n                        collection: deals\r\n                    });\r\n                    this.DealsListRegion.show(colView);\r\n                }\r\n\r\n                if ($(this.DealsListMobileRegion.el).is(':visible')) {\r\n                    var mobileColView = new DealsList.DealsListMobileCollectionView({\r\n                        collection: deals\r\n                    });\r\n                    this.DealsListMobileRegion.show(mobileColView);\r\n                }\r\n            },\r\n\r\n            showDeals: function () {\r\n                //console.log('DealsList.showDeals');\r\n                var that = this;\r\n                var repo = new App.Deals.Repository();\r\n                // fetch data\r\n                this.SearchParams.RegionId = App.SelectedRegionId.get();\r\n\r\n                var promise = repo.search(this.SearchParams);\r\n                promise.done(function (deals) {\r\n                    // render the data\r\n                    that.renderDeals(deals);\r\n                });\r\n            }\r\n        });\r\n\r\n        DealsList.addInitializer(function (args) {\r\n            //console.log('DealsList.addInitializer');\r\n            DealsList.controller = new DealsList.Controller({\r\n                DealsListRegion: args.DealsListRegion,\r\n                DealsListMobileRegion: args.DealsListMobileRegion\r\n            });\r\n        });\r\n\r\n        DealsList.addFinalizer(function () {\r\n            //console.log('DealsList.addFinalizer');\r\n            DealsList.controller.close();\r\n            delete DealsList.controller;\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"Deals\", function(Deals, App, Backbone, Marionette, $, _) {\r\n\r\n        var submodules = ['Deals.List', 'Deals.Details'];\r\n\r\n        Deals.on('start', function () {\r\n            Deals.listLayout = new App.HomePageLayout();\r\n            Deals.detailsLayout = new App.DetailsPageLayout();\r\n        });\r\n\r\n        Deals.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n\r\n            },\r\n\r\n            _startListSubmodule: function () {\r\n                Deals.listLayout.render();\r\n                App.regionManager.get('Main').show(Deals.listLayout);\r\n                var options = {\r\n                    DealsListRegion: Deals.listLayout.MainContent,\r\n                    DealsListMobileRegion: Deals.listLayout.MainContentMobile\r\n                };\r\n                App.vent.trigger('submodule:start', submodules, 'Deals.List', options);\r\n            },\r\n\r\n            _startDetailsModule: function () {\r\n                Deals.detailsLayout.render();\r\n                App.regionManager.get('Main').show(Deals.detailsLayout);\r\n                var options = {\r\n                    DealsDetailsRegion: Deals.detailsLayout.MainContent,\r\n                    DealsDetailsMobileRegion: Deals.detailsLayout.MainContentMobile\r\n                };\r\n                App.vent.trigger('submodule:start', submodules, 'Deals.Details', options);\r\n            },\r\n\r\n            showDealsList: function (mode, categoryId) {\r\n                //Honeymoon: -66\r\n                this._startListSubmodule();\r\n                switch (mode) {\r\n                case diskupon.DealCategory.All:\r\n                    App.Deals.List.controller.SearchParams.CategoryId = diskupon.DealCategory.All;\r\n                    break;\r\n                case diskupon.DealCategory.New:\r\n                    App.Deals.List.controller.SearchParams.CategoryId = diskupon.DealCategory.New;\r\n                    break;\r\n                case diskupon.DealCategory.Hot:\r\n                    App.Deals.List.controller.SearchParams.CategoryId = diskupon.DealCategory.Hot;\r\n                    break;\r\n                case diskupon.DealCategory.EndingSoon:\r\n                    App.Deals.List.controller.SearchParams.CategoryId = diskupon.DealCategory.EndingSoon;\r\n                    break;\r\n                case diskupon.DealCategory.ByCategory:\r\n                    App.Deals.List.controller.SearchParams.CategoryId = categoryId;\r\n                    break;\r\n                default:\r\n                    App.Deals.List.controller.SearchParams.CategoryId = diskupon.DealCategory.All;\r\n                    break;\r\n                }\r\n                App.Deals.List.controller.showDeals();\r\n            },\r\n\r\n            showDealDetails: function (dealId) {\r\n                this._startDetailsModule();\r\n                App.Deals.Details.controller.DealId = dealId;\r\n                App.Deals.Details.controller.showDealsDetails();\r\n            }\r\n        });\r\n\r\n        Deals.addInitializer(function () {\r\n            //console.log('Deals.Initializer');\r\n            Deals.controller = new Deals.Controller({\r\n            });\r\n        });\r\n\r\n        Deals.addFinalizer(function () {\r\n            //console.log('Deals.Finalizer');\r\n            Deals.controller.close();\r\n            delete Deals.controller;\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","/**************************/\r\n/*\r\n/* move these methods below to another library\r\n/*\r\n/***************************/\r\n\r\n/*** backbone force use POST when fetching ***/\r\nBackbone.ajax = function() {\r\n    var args = Array.prototype.slice.call(arguments);\r\n    if (args[0]) {\r\n        args[0].type = 'POST';\r\n    }\r\n    return Backbone.$.ajax.apply(Backbone.$, args);\r\n};\r\n\r\n/*** make push state for backbone, intercept anchor click ***/\r\nvar others = {\r\n    prepareBackbonePushState: function () {\r\n        // Use absolute URLs  to navigate to anything not in your Router.\r\n        // Only need this for pushState enabled browsers\r\n        if (Backbone.history && Backbone.history._hasPushState) {\r\n            // Use delegation to avoid initial DOM selection and allow all matching elements to bubble\r\n            $(document).delegate(\"a[href^='/']\", \"click\", function(evt) {\r\n                //console.log('hijacked!!!');\r\n                // Get the anchor href and protcol\r\n                var href = $(this).attr(\"href\");\r\n                var protocol = this.protocol + \"//\";\r\n                // Ensure the protocol is not part of URL, meaning its relative.\r\n                // Stop the event bubbling to ensure the link will not cause a page refresh.\r\n                if (href.slice(protocol.length) !== protocol) {\r\n                    evt.preventDefault();\r\n                    // Note by using Backbone.history.navigate, router events will not be\r\n                    // triggered.  If this is a problem, change this to navigate on your\r\n                    // router.\r\n                    Backbone.history.navigate(href, true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n// /*** override native console ***/\r\n// (function(){\r\n//     var nativeConsoleLog = console.log;\r\n//     console.log = function (message) {\r\n//         // DO MESSAGE HERE.\r\n//         //nativeConsoleLog.apply(console, arguments);\r\n//         return false;\r\n//     };\r\n// })();\r\n\r\n","(function (diskupon) {\r\n    diskupon.App.module(\"RegionSelector\", function(RegionSelector, App, Backbone, Marionette, $, _) {\r\n\r\n        //this.startWithParent = false;\r\n\r\n        RegionSelector.SelectRegionView = Marionette.ItemView.extend({\r\n            template: tpl_region_selector,\r\n            tagName: 'span',\r\n            className: 'dsk-regionPicker',\r\n            events: {\r\n                'change #dsk_select_region': 'regionChanged'\r\n            },\r\n            onRender: function () {\r\n                this.$el.find('#dsk_select_region').val(App.SelectedRegionId.get());\r\n            },\r\n            regionChanged: function (e) {\r\n                //console.log('dsk_select_region change');\r\n                e.preventDefault();\r\n                var selectedRegionId = parseInt($(e.currentTarget).val(), 10);\r\n                //console.log(selectedRegionId);\r\n                // trigger view event\r\n                this.trigger('region:changed', selectedRegionId);\r\n            }\r\n        });\r\n\r\n        RegionSelector.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show', '_regionChanged');\r\n                this.RegionSelectorRegion = options.RegionSelectorRegion;\r\n            },\r\n\r\n            show: function () {\r\n                var that = this,\r\n                    repo = new App.Deals.Repository();\r\n\r\n                var promise = repo.getRegions();\r\n\r\n                promise.done(function (regions) {\r\n                    var view = new RegionSelector.SelectRegionView({\r\n                        collection: regions\r\n                    });\r\n\r\n                    // add listener for view event\r\n                    that.listenTo(view, 'region:changed', that._regionChanged);\r\n\r\n                    that.RegionSelectorRegion.show(view);\r\n                });\r\n            },\r\n\r\n            /*** event handler ***/\r\n            _regionChanged: function (selectedRegionId) {\r\n                //console.log('RegionSelector.Controller region:changed');\r\n                this.trigger('region:changed', selectedRegionId);\r\n            }\r\n        });\r\n\r\n        RegionSelector.addInitializer(function () {\r\n            //console.log('RegionSelector.addInitializer');\r\n            RegionSelector.controller = new RegionSelector.Controller({\r\n                RegionSelectorRegion: App.regionManager.get('RegionSelector')\r\n            });\r\n\r\n            RegionSelector.controller.listenTo(RegionSelector.controller, 'region:changed', function (selectedRegionId) {\r\n                App.SelectedRegionId.set(selectedRegionId);\r\n                window.location.href = '/';\r\n            });\r\n        });\r\n\r\n    });\r\n} (window.Diskupon));","(function (diskupon) {\r\n    diskupon.App.module(\"TopMenu\", function(TopMenu, App, Backbone, Marionette, $, _) {\r\n        //this.startWithParent = false;\r\n        TopMenu.TopMenuItemView = Marionette.ItemView.extend({\r\n            tagName: 'li',\r\n            template: tpl_top_menu,\r\n            onBeforeRender: function() {\r\n                var subCategories = this.model.get('SubCategories');\r\n                if (subCategories && subCategories.length > 0) {\r\n                    this.$el.addClass('dropdown');\r\n                    this.model.set('HasSubCategories', true);\r\n                } else {\r\n                    this.model.set('HasSubCategories', false);\r\n                }\r\n\r\n                var catId = parseInt(this.model.get('CategoryId'), 10);\r\n                this.$el.attr('data-key', catId);\r\n            }\r\n        });\r\n\r\n        TopMenu.TopMenuCollectionView = Marionette.CollectionView.extend({\r\n            tagName: 'ul',\r\n            className: 'nav nav-pills dsk-topMenuInner',\r\n            itemView: TopMenu.TopMenuItemView,\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'setActiveMenuItem');\r\n                this.activeTopMenuKey = options.activeTopMenuKey;\r\n                this.activeTopMenuSubKey = options.activeTopMenuSubKey;\r\n            },\r\n            onRender: function () {\r\n                //this.setActiveMenuItem(this.activeTopMenuKey, this.activeTopMenuSubKey);\r\n            },\r\n            setActiveMenuItem: function (activeTopMenuKey, activeTopMenuSubKey) {\r\n                this.$el.find('.active').removeClass('active');\r\n                if (activeTopMenuKey) {\r\n                    this.$el.find('[data-key=\"' + activeTopMenuKey + '\"]').addClass('active');\r\n                }\r\n            }\r\n        });\r\n\r\n        /******* top menu for mobile *******/\r\n        TopMenu.TopMenuMobileItemView = Marionette.ItemView.extend({\r\n            tagName: 'li',\r\n            template: tpl_top_menu_mobile,\r\n            onBeforeRender: function() {\r\n                var subCategories = this.model.get('SubCategories');\r\n                if (subCategories && subCategories.length > 0) {\r\n                    this.$el.addClass('dropdown');\r\n                    this.model.set('HasSubCategories', true);\r\n                } else {\r\n                    this.model.set('HasSubCategories', false);\r\n                }\r\n\r\n                var catId = parseInt(this.model.get('CategoryId'), 10);\r\n                this.$el.attr('data-key', catId);\r\n            }\r\n        });\r\n\r\n        TopMenu.TopMenuMobileCollectionView = Marionette.CollectionView.extend({\r\n            tagName: 'ul',\r\n            className: 'nav nav-pills dsk-topMenuInnerMobile',\r\n            itemView: TopMenu.TopMenuMobileItemView,\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'setActiveMenuItem');\r\n                this.activeTopMenuKey = options.activeTopMenuKey;\r\n                this.activeTopMenuSubKey = options.activeTopMenuSubKey;\r\n            },\r\n            onRender: function () {\r\n                //this.setActiveMenuItem(this.activeTopMenuKey, this.activeTopMenuSubKey);\r\n            },\r\n            setActiveMenuItem: function (activeTopMenuKey, activeTopMenuSubKey) {\r\n                this.$el.find('.active').removeClass('active');\r\n                var key = 0;\r\n                if (activeTopMenuSubKey) {\r\n                    key = activeTopMenuSubKey;\r\n                } else if (activeTopMenuKey) {\r\n                    key = activeTopMenuKey;\r\n                }\r\n                if (key) {\r\n                    this.$el.find('[data-key=\"' + key + '\"]').addClass('active');\r\n                }\r\n            }\r\n        });\r\n\r\n        TopMenu.Controller = Marionette.Controller.extend({\r\n            initialize: function (options) {\r\n                _.bindAll(this, 'show', 'setActiveMenuItem');\r\n                this.TopMenuRegion = options.TopMenuRegion;\r\n                this.TopMenuRegionMobile = options.TopMenuRegionMobile;\r\n                this.TopMenuView = undefined;\r\n                this.TopMenuMobileView = undefined;\r\n            },\r\n\r\n            show: function () {\r\n                //console.log('TopMenu:show');\r\n                var that = this;\r\n                var repo = new App.Deals.Repository();\r\n                // fetch data\r\n                var promise = repo.getDealCategories();\r\n                promise.done(function (categories) {\r\n                    var view = new TopMenu.TopMenuCollectionView({\r\n                        collection: categories\r\n                    });\r\n                    that.TopMenuView = view;\r\n                    that.TopMenuRegion.show(view);\r\n\r\n                    var mobileView = new TopMenu.TopMenuMobileCollectionView({\r\n                        collection: categories\r\n                    });\r\n                    that.TopMenuMobileView = mobileView;\r\n                    that.TopMenuRegionMobile.show(mobileView);\r\n\r\n                    that.trigger('topmenu:shown');\r\n                });\r\n                promise.fail(function () {\r\n                });\r\n                promise.always(function () {\r\n                });\r\n            },\r\n\r\n            setActiveMenuItem: function (activeTopMenuKey, activeTopMenuSubKey) {\r\n                this.TopMenuView.setActiveMenuItem(activeTopMenuKey, activeTopMenuSubKey);\r\n                this.TopMenuMobileView.setActiveMenuItem(activeTopMenuKey, activeTopMenuSubKey);\r\n            }\r\n        });\r\n\r\n        TopMenu.addInitializer(function () {\r\n            //console.log('TopMenu.addInitializer');\r\n            TopMenu.controller = new TopMenu.Controller({\r\n                TopMenuRegion: App.regionManager.get('TopMenuInner'),\r\n                TopMenuRegionMobile: App.regionManager.get('TopMenuInnerMobile')\r\n            });\r\n\r\n            TopMenu.controller.listenTo(TopMenu.controller, 'topmenu:changeactivemenuitem', function (activeTopMenuKey, activeTopMenuSubKey) {\r\n                TopMenu.controller.setActiveMenuItem(activeTopMenuKey, activeTopMenuSubKey);\r\n            });\r\n        });\r\n\r\n        // TopMenu.addFinalizer(function () {\r\n        //     console.log('TopMenu.Finalizer');\r\n        //     TopMenu.controller.close();\r\n        //     delete TopMenu.controller;\r\n        // });\r\n\r\n    });\r\n} (window.Diskupon));"]}